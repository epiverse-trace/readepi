[{"path":"https://epiverse-trace.github.io/readepi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 readepi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/design_principle.html","id":"concept-and-motivation","dir":"Articles","previous_headings":"","what":"Concept and motivation","title":"Package design vignette for {readepi}","text":"document outlines design decisions guiding development strategies readepi R package, reasoning behind , well possible pros cons decision. Importing data various sources R environment first step workflow outbreak analysis. Health data often stored individual files different formats, relational database management systems (RDBMS), importantly, many health organizations store data health information systems () wrapped hood specific Application Programming Interfaces (APIs). Many R packages developed years read data stored file directory containing multiple files. recommend {rio} package importing data relatively small size {data.table} package large files. retrieving data RDBMS, recommend {DBI} package. several R packages reading data {fingertipsR}, {REDCapR}, {godataR}, {globaldothealth}, used fetch data Fingertips, REDCap, Go.Data, Global.Health respectively. However, packages usually designed read specific can’t used query others. increases dependency many packages introduces challenge unified framework importing data multiple . , propose readepi, centralized tool provide users capability importing data various RDBMS. readepi aims importing data several potential sources way. data sources include distributed health information systems public databases shown figure .","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/design_principle.html","id":"scope","dir":"Articles","previous_headings":"","what":"Scope","title":"Package design vignette for {readepi}","text":"readepi package designed import data two common sources institutional health-related data: wrapped specific APIs RDBMS run specific servers. import data sources, users must read access provide relevant query parameters fetch target data. current version readepi supports importing data : - HISs: DHIS2 SORMAS, RDBMS: MS SQL, SQLite, MySQL, PostgreSQL. next releases, plan include features reading data additional HISs like GoData, Globaldothealth, ODK, well RDBMS MS Access.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/design_principle.html","id":"output","dir":"Articles","previous_headings":"","what":"Output","title":"Package design vignette for {readepi}","text":"main functions {readepi} package return data frame object contains data fetched target source specified request parameters. login() function returns connection object used subsequent queries.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/design_principle.html","id":"design-decisions","dir":"Articles","previous_headings":"","what":"Design decisions","title":"Package design vignette for {readepi}","text":"aim {readepi} simplify standardize process fetching data APIs servers. strive make easy users limiting number required arguments access retrieve data interest target source. , package structured around main functions: read_dhis2(), read_sormas(), read_rdbms(); one auxiliary functions (login()). type argument refers name data source interest. current version package covers following types:","code":"i) RDBMS: “ms sql”, “mysql”, “postgresql”, “sqlite” ii) APIs: “dhis2”, “sormas”"},{"path":"https://epiverse-trace.github.io/readepi/articles/design_principle.html","id":"authentication","dir":"Articles","previous_headings":"Design decisions","what":"Authentication","title":"Package design vignette for {readepi}","text":"login() function used establish connection data source. verifies user’s identity determines authorized access requested database API. Establishing connection crucial ensuring successful data import. However, basic authentication work SORMAS. maintain design package across , login function returns  object importing data SORMAS. authentication credentials provided, securely stored within connection object. prevents need re-supply subsequent requests functions. Figure lists arguments needed call login() function.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/design_principle.html","id":"data-import","dir":"Articles","previous_headings":"Design decisions","what":"Data import","title":"Package design vignette for {readepi}","text":"can use one functions depending data source. login: Pool object obtained login() function query: string SQL query list parameters. query parameters provided list, used form appropriate SQL query internally. resulting SQL query executed read_rdbms(). login: httr2_response object returned login() function org_unit: character organisation unit ID name program: character program ID name login: list object returned login() disease: character vector names diseases interest. Users can get list diseases data available SORMAS system using sormas_get_diseases() function. since: Date value ISO8601 format (YYYY-mm-dd). Note , reading RDBMS, query argument SQL query list vector table names, fields rows subset . , strongly recommend reading vignette query_parameters details request parameters supported current version package.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/design_principle.html","id":"dependencies","dir":"Articles","previous_headings":"","what":"Dependencies","title":"Package design vignette for {readepi}","text":"{httr2} {data.table}: used construct execute API requests. {dplyr}: Utilized data manipulation capabilities. {DBI}: Used database connectivity querying. {pool}: Provides functionality managing multiple database connections. {odbc}: Supplies drivers required accessing various DBMS. {RMySQL}: Specifically used MySQL database connectivity. functions also require system dependencies OS-X Linux systems, detailed install drivers vignette vignette. Additionally, development package necessitates inclusion required packages: - {checkmate} - {httptest2} - {bookdown} - {rmarkdown} - {testthat} (>= 3.0.0) - {knitr} - {cli} - {DiagrammeR} - {cyclocomp}","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/design_principle.html","id":"contribute","dir":"Articles","previous_headings":"","what":"Contribute","title":"Package design vignette for {readepi}","text":"special requirements contributing {readepi}, please follow package contributing guide.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/install_drivers.html","id":"ms-sql-drivers-for-osx-based-systems","dir":"Articles","previous_headings":"","what":"MS SQL drivers for OSX-based systems","title":"install_drivers","text":"reading data Microsoft SQL (MS SQL) server, users Unix-based systems need install MS ODBC driver compatible version target server. example, ODBC Driver 17 compatible SQL server 2019, version 15.0. choosing appropriate driver, open terminal, run instructions install MS SQL ODBC driver Mac. installation MS SQL driver 17 Mac installation MS SQL driver 13.1 Mac","code":"driver=17 brew install unixodbc brew tap microsoft/mssql-release https://github.com/Microsoft/homebrew-mssql-release brew update brew install msodbcsql${driver} brew install mssql-tools ODBCSYSINI=/ brew install unixodbc brew tap microsoft/mssql-release https://github.com/Microsoft/homebrew-mssql-release brew update brew install msodbcsql@13.1.9.2 brew install mssql-tools@14.0.6.0 ODBCSYSINI=/"},{"path":"https://epiverse-trace.github.io/readepi/articles/install_drivers.html","id":"ms-sql-drivers-for-linux-based-systems","dir":"Articles","previous_headings":"","what":"MS SQL drivers for Linux-based systems","title":"install_drivers","text":"Note requires Ubuntu 16.04 . Choose appropriate driver, open terminal type instructions : installation MS SQL driver version 17 Ubuntu installation MS SQL driver version 13.1 Ubuntu installation MS SQL driver Linux distributions install MS SQL driver Linux distributions, Debian Fedora, click follow instructions. installation, check installed drivers using: command return list installed drivers facing issues driver installation process, consult odbc github page MS documentation topic. also important view data stored MS SQL server. purpose, recommend install graphical user interface (GUI) Azure Data Studio.","code":"driver=17 sudo su curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list > /etc/apt/sources.list.d/mssql-release.list exit  sudo apt-get update sudo ACCEPT_EULA=Y apt-get install -y msodbcsql${driver} sudo ACCEPT_EULA=Y apt-get install -y mssql-tools echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bashrc source ~/.bashrc sudo apt-get install -y unixodbc-dev sudo su curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list exit sudo apt-get update sudo ACCEPT_EULA=Y apt-get install msodbcsql sudo ACCEPT_EULA=Y apt-get install mssql-tools echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bashrc source ~/.bashrc sudo apt-get install unixodbc-dev odbc::odbcListDrivers()"},{"path":"https://epiverse-trace.github.io/readepi/articles/query_parameters.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"query_parameters","text":"successful API database request, users required provide details data can found data want reading function return. information generally designated query paramaters can vary depending type . sections , describe query parameters define use fetching data target .","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/query_parameters.html","id":"rdbms-query-parameters","dir":"Articles","previous_headings":"Introduction","what":"RDBMS query parameters","title":"query_parameters","text":"Following successful authentication using login() function, connection database established. Users can determine name table database, dataset interest stored. can also inform reading function entries /fields mainly interested . pieces information passed read_rdbms() via query argument. current version package, query can either: SQL query parameters embedded within SQL request, list following elements: table: string table name. fields: vector column names. specified, columns returned. Default NULL. filter: expression vector values used filter rows table interest. Default NULL.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/query_parameters.html","id":"examples","dir":"Articles","previous_headings":"Introduction > RDBMS query parameters","what":"Examples","title":"query_parameters","text":"Say connection object rdbms_login aiming fetch data author table. Suppose table contains article first author’s details. table, interest return author’s name, surname orcid first ten authors. value query argument look like : Note syntax SQL query depends server type. example tailored MySQL server. wish explore syntax server types, see details.","code":"## AS A LIST read_rdbms(   login = rdbms_login,   query = list(     table  = \"author\",     fields = c(\"name\", \"last_name\", \"orcid\"),     filter = 1:10   ) )  ## AS AN SQL QUERY - FOR MySQL server read_rdbms(   login = rdbms_login,   query = \"SELECT name, last_name, orcid FROM author LIMIT 10\" )"},{"path":"https://epiverse-trace.github.io/readepi/articles/query_parameters.html","id":"dhis2-query-parameters","dir":"Articles","previous_headings":"Introduction","what":"DHIS2 query parameters","title":"query_parameters","text":"account diversity query parameters across multiple DHSI2 versions, table detailing query parameters appropriate version provided within package variable name request_parameters. variable data frame contains following details.","code":"readepi::request_parameters |>   kableExtra::kbl() |>   kableExtra::kable_paper(\"striped\", font_size = 14, full_width = TRUE) |>   kableExtra::scroll_box(height = \"200px\", width = \"100%\",                          box_css = \"border: 1px solid #ddd; padding: 5px; \",                          extra_css = NULL,                          fixed_thead = TRUE)"},{"path":"https://epiverse-trace.github.io/readepi/articles/query_parameters.html","id":"sormas-query-parameters","dir":"Articles","previous_headings":"Introduction","what":"SORMAS query parameters","title":"query_parameters","text":"current implementation package, read_sormas() surrogate functions use following basic query parameters default values: disease: character name disease interest. Use sormas_get_diseases() function get list available diseases. filter: expression used filter rows. current version uses default value: , .e., returning rows. since: value type Date ISO8601 format (YYYY-mm-dd). current version uses default value: NULL, .e., returning rows since beginning data collection.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/readepi.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"readepi: Reading data from health information systems","text":"Health-related data general, epidemiological data particular, stored files, relation database management systems (RDBMS), health information systems (). category includes numerous options, various file formats, RDBMS types, APIs. Importing data repositories involve usage different format-specific functions API-specific packages, exhausting task end users. main objective {readepi} package simplify process reading health-related data diverse sources, allowing user focus downstream analysis tasks. current implementation {readepi} provides functions reading data two common : (SORMAS, DHIS2, RDBMS MS SQL, MySQL, PostgreSQL, SQLite. utility functions accessing relevant files data also included package.","code":"# LOAD readepi library(readepi)"},{"path":"https://epiverse-trace.github.io/readepi/articles/readepi.html","id":"need-for-ms-drivers","dir":"Articles","previous_headings":"Overview","what":"Need for MS drivers","title":"readepi: Reading data from health information systems","text":"Users operating systems Microsoft need appropriate MS driver installed system. driver installation process documented details install drivers vignette vignette.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/readepi.html","id":"authentication","dir":"Articles","previous_headings":"Overview","what":"Authentication","title":"readepi: Reading data from health information systems","text":"read data RDBMS , user expected , least, read access system. establish connection system, users can call login() function following arguments: : URL system interest. APIs, must base URL (required). type: source name (required). current version package covers following RDBMS types: “ms sql”, “mysql”, “postgresql”, “sqlite”, “dhis2”, “sormas”. user_name: user name (optional). password: user’s password (optional). password provided (set NULL), user prompt enter password. driver_name: driver name (optional). needed connecting RDBMS . db_name: database name (optional). needed connecting RDBMS . port: port ID (optional). needed connecting RDBMS .","code":"# CONNECT TO A DHIS2 INSTANCE dhis2_login <- login(   type = \"dhis2\",   from  = \"https://smc.moh.gm/dhis\",   user_name = \"test\",   password  = \"Gambia@123\" )  # CONNECT TO THE TEST MYSQL SERVER rdbms_login <- login(   type = \"mysql\",   from = \"mysql-rfam-public.ebi.ac.uk\",   user_name = \"rfamro\",   password = \"\",   driver_name = \"\",   db_name = \"Rfam\",   port = 4497 )  # CONNECT TO A SORMAS SYSTEM dhis2_login <- login(   type = \"sormas\",   from  = \"https://demo.sormas.org/sormas-rest\",   user_name = \"SurvSup\",   password  = \"Lk5R7JXeZSEc\" )"},{"path":"https://epiverse-trace.github.io/readepi/articles/readepi.html","id":"reading-data-from-rdbms","dir":"Articles","previous_headings":"Overview","what":"Reading data from RDBMS","title":"readepi: Reading data from health information systems","text":"Health related research data usually stored either relational databases non-SQL databases. example, MRCG@LSHTM, projects data stored relational databases. SQL-based database run specific sever. current version {readepi} package provides function (read_rdbms()) reading data MS SQL, MySQL, PostgreSQL, SQLite. read_rdbms() function takes following arguments: login: connection object obtained login() function table: string table name. fields: vector column names. specified, columns returned. Default NULL. filter: expression vector values used filter rows table interest. length value ‘select’. Default NULL.","code":"# CONNECT TO THE TEST MYSQL SERVER rdbms_login <- login(   type = \"mysql\",   from = \"mysql-rfam-public.ebi.ac.uk\",   user_name = \"rfamro\",   password = \"\",   driver_name = \"\",   db_name = \"Rfam\",   port = 4497 ) # DISPLAY THE LIST OF TABLES FROM A DATABASE OF INTEREST tables <- show_tables(login = rdbms_login) head(tables) #> [1] \"_annotated_file\"     \"_family_file\"        \"_genome_data\"        #> [4] \"_lock\"               \"_overlap\"            \"_overlap_membership\" # READING ALL FIELDS AND ALL RECORDS FROM ONE TABLE (`author`) USING AN SQL # QUERY dat <- read_rdbms(   login = rdbms_login,   query = \"select * from author\" ) # READING ALL FIELDS AND ALL RECORDS FROM ONE TABLE (`author`) WHERE QUERY # PARAMETERS ARE SPECIFIED AS A LIST dat <- read_rdbms(   login = rdbms_login,   query = list(table = \"author\", fields = NULL, filter = NULL) ) # SELECT FEW COLUMNS FROM ONE TABLE AND LEFT JOIN WITH ANOTHER TABLE dat <- read_rdbms(     login = rdbms_login,     query = \"select author.author_id, author.name,   family_author.author_id from author left join family_author on   author.author_id = family_author.author_id\" )"},{"path":"https://epiverse-trace.github.io/readepi/articles/readepi.html","id":"reading-data-from-his","dir":"Articles","previous_headings":"","what":"Reading data from HIS","title":"readepi: Reading data from health information systems","text":"current version {readepi} supports reading data two common : DHIS2, SORMAS.","code":""},{"path":"https://epiverse-trace.github.io/readepi/articles/readepi.html","id":"importing-data-from-dhis2","dir":"Articles","previous_headings":"Reading data from HIS","what":"Importing data from DHIS2","title":"readepi: Reading data from health information systems","text":"District Health Information Software (DHIS2) open source software used many health institutions store, manage analyze various types health data. read_dhis2() function can used import data DHIS2 Tracker instances API following arguments: login: httr2_response object returned login() function org_unit: character organisation unit ID name program: character program ID name important note request parameters used internal functions package vary depending API version. Currently, {readepi} accounts versions 2.22 2.42. later current version DHIS2 test instance. Newer versions (> 2.42) might require different syntax request parameters depending defined DHIS2 developers. can result failure read_dhis2() function importing data newer versions. issue can raised make developers package aware problem. current version, login() function supports basic authentication, .e., using user name password. example establish connection DHIS2 instance shown . Organisation units programs key elements successful call read_dhis2() function. reason, exported following functions help users access identify correct organisation unit program names IDs given DHIS2 instance. Similarly, users can also access list data elements program stages given DHIS2 instance shown code chunks . important know organisation units registered specific program. know organisation units run particular program, use get_program_org_units() function shown example . identifying correct organisation unit program IDs names, users can import corresponding data using read_dhis2() following syntax:","code":"# CONNECT TO A DHIS2 INSTANCE dhis2_login <- login(   type = \"dhis2\",   from = \"https://smc.moh.gm/dhis\",   user_name = \"test\",   password = \"Gambia@123\" ) # GET THE LIST OF ALL ORGANISATION UNITS IN AN HIERARCHICAL ORDER org_units <- get_organisation_units(login = dhis2_login) # GET THE LIST OF ALL PROGRAMS programs <- get_programs(login = dhis2_login) # GET THE LIST OF ALL DATA ELEMENTS data_elements <- get_data_elements(login = dhis2_login) # GET THE LIST OF ALL PROGRAM STAGES FOR A GIVEN PROGRAM ID program_stages <- get_program_stages(   login = dhis2_login,   program = \"E5IUQuHg3Mg\",   programs = programs ) # GET THE LIST OF ORGANISATION UNITS RUNNING THE SPECIFIED PROGRAM target_org_units <- get_program_org_units(     login = dhis2_login,     program = \"E5IUQuHg3Mg\",     org_units = org_units   ) # IMPORT DATA FROM DHIS2 FOR THE SPECIFIED ORGANISATION UNIT AND PROGRAM IDs data <- read_dhis2(   login = dhis2_login,   org_unit = \"GcLhRNAFppR\",   program = \"E5IUQuHg3Mg\" )  # IMPORT DATA FROM DHIS2 FOR THE SPECIFIED ORGANISATION UNIT AND PROGRAM NAMES data <- read_dhis2(   login = dhis2_login,   org_unit = \"Keneba\",   program = \"Child Registration & Treatment \" )"},{"path":"https://epiverse-trace.github.io/readepi/articles/readepi.html","id":"importing-data-from-sormas","dir":"Articles","previous_headings":"Reading data from HIS","what":"Importing data from SORMAS","title":"readepi: Reading data from health information systems","text":"Surveillance Outbreak Response Management Analysis System (SORMAS) open source eHealth system optimises processes used monitoring spread infectious diseases responding outbreak situations. read_sormas() function can used import data SORMAS API. current version, read_sormas() function returns data following columns: case_id, person_id, sex, date_of_birth, case_origin, country, city, lat, long, case_status, date_onset, date_admission, date_last_contact, date_first_contact, outcome, date_outcome, Ct_values. important note SORMAS support basic authentication .e., authentication details directly provided read_sormas() function without prior call login() function. Hence, function takes following arguments: base_url: character base URL target SORMAS system user_name: character user name credential password: character password credential disease: character vector names diseases interest. Users can get list diseases available SORMAS system using sormas_get_diseases() function. relevant, users can download data dictionary specific folder using sormas_get_data_dictionary(). provides idea content column. call read_sormas() function looks like .","code":"# ESTABLISH THE CONNECTION TO THE SORMAS SYSTEM sormas_login <- login(   type = \"sormas\",   from = \"https://demo.sormas.org/sormas-rest\",   user_name = \"SurvSup\",   password = \"Lk5R7JXeZSEc\" )  # GET THE LIST OF ALL AVAILABLE DISEASES IN THE TEST SORMAS SYSTEM disease_names <- sormas_get_diseases(   login = sormas_login ) # DOWNLOAD AND SAVE THE DATA DICTIONARY IN YOUR CURRENT DIRECTORY path_to_dictionary <- sormas_get_data_dictionary(path = getwd()) path_to_dictionary #> [1] \"/home/runner/work/readepi/readepi/vignettes/dictionary.\" # FETCH ALL COVID (coronavirus) CASES FROM THE TEST SORMAS INSTANCE FROM THE # BEGINNING OF DATA COLLECTION covid_cases <- read_sormas(   login = sormas_login,   disease = \"coronavirus\",   since = 0 )  # FETCH ALL COVID (coronavirus) CASES FROM THE TEST SORMAS INSTANCE SINCE # JUNE 01, 2025 covid_cases <- read_sormas(   login = sormas_login,   disease = \"coronavirus\",   since = as.Date(\"2025-06-01\") )"},{"path":"https://epiverse-trace.github.io/readepi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karim Mané. Author, maintainer, copyright holder. Emmanuel Kabuga. Contributor. Bubacarr Bah. Contributor. Bankolé Ahadzie. Contributor. Nuredin Mohammed. Contributor. Abdoelnaser Degoot. Contributor. Hugo Gruson. Reviewer. Pratik Gupte. Reviewer. Andree Valle-Campos. Reviewer. London School Hygiene Tropical Medicine, LSHTM. Copyright holder. data.org. Funder.","code":""},{"path":"https://epiverse-trace.github.io/readepi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Karim Mané, Nuredin Mohammed, Bankolé Ahadzie, Abdoelnaser Degoot, Bubacarr Bah (2023). readepi: Read Data Health Information Systems website: https://github.com/epiverse-trace/readepi/","code":"@Manual{,   title = {Read Data From Health Information Systems},   author = {Karim Mané and Nuredin Mohammed and Bubacarr Bah and Bankolé Ahadzie and Abdoelnaser Degoot},   year = {2023},   url = {https://github.com/epiverse-trace/readepi}, }"},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"readepi-read-data-from-health-information-systems-","dir":"","previous_headings":"","what":"Read Data from Relational Database Management Systems and Health Information Systems","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"readepi R package reading data several health information systems () relational database management systems (RDBMS). readepi currently supports reading data followings: RDBMS (Relational Database Management Systems) including MS SQL, MySQL, PostgreSQL, SQLite  DHIS2: open source web-based platform managing health information SORMAS: eHealth system monitoring spread infectious diseases responding outbreak situations readepi returns data frame data specified system. readepi developed Epiverse-TRACE team Medical Research Center, Gambia unit London School Hygiene Tropical Medicine.","code":""},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"readepi can installed CRAN using latest development version readepi GitHub :","code":"install.packages(\"readepi\") if (!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/readepi\") library(readepi)"},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"readepi currently three main functions read data specified source. arguments functions generally similar, specific data source (see vignette details). examples show use package functionalities import data variety sources.","code":""},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"reading-data-from-rdbms","dir":"","previous_headings":"Quick start","what":"Reading data from RDBMS","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"read_rdbms() function used import data variety RDBMS, including MS SQL, MySQL, PostgreSQL, SQLite. Reading data RDBMS requires: MS SQL driver compatible version DBMS interest. install drivers vignette vignette describes install appropriate driver database management system. Users can read data RDBMS providing list query parameters interest SQL query (information, see vignette).","code":"# CONNECT TO THE TEST MYSQL SERVER rdbms_login <- readepi::login(   from = \"mysql-rfam-public.ebi.ac.uk\",   type = \"mysql\",   user_name = \"rfamro\",   password = \"\",   driver_name = \"\",   db_name = \"Rfam\",   port = 4497 )  # DISPLAY THE LIST OF TABLES FROM A DATABASE OF INTEREST tables <- readepi::show_tables(login = rdbms_login)  # READING ALL FIELDS AND ALL RECORDS FROM ONE TABLE (`author`) USING AN SQL QUERY dat <- readepi::read_rdbms(   login = rdbms_login,   query = \"select * from author\" )  # SELECT FEW COLUMNS FROM ONE TABLE AND LEFT JOIN WITH ANOTHER TABLE dat <- readepi::read_rdbms(     login = rdbms_login,     query = \"select author.author_id, author.name,   family_author.author_id from author left join family_author on   author.author_id = family_author.author_id\" )  # READING ALL FIELDS AND ALL RECORDS FROM ONE TABLE (`author`) WHERE QUERY PARAMETERS ARE SPECIFIED AS A LIST dat <- readepi::read_rdbms(   login = rdbms_login,   query = list(table = \"author\", fields = NULL, filter = NULL) )"},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"reading-data-from-dhis2","dir":"","previous_headings":"Quick start","what":"Reading data from DHIS2","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"","code":"# CONNECT TO A DHIS2 INSTANCE dhis2_login <- readepi::login(   type = \"dhis2\",   from = \"https://smc.moh.gm/dhis\",   user_name = \"test\",   password = \"Gambia@123\" )  # IMPORT DATA FROM DHIS2 FOR THE SPECIFIED ORGANISATION UNIT AND PROGRAM IDs data <- readepi::read_dhis2(   login = dhis2_login,   org_unit = \"GcLhRNAFppR\",   program = \"E5IUQuHg3Mg\" )"},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"reading-data-from-sormas","dir":"","previous_headings":"Quick start","what":"Reading data from SORMAS","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"","code":"# CONNECT TO THE SORMAS SYSTEM sormas_login <- readepi::login(   type = \"sormas\",   from = \"https://demo.sormas.org/sormas-rest\",   user_name = \"SurvSup\",   password = \"Lk5R7JXeZSEc\" )  # FETCH ALL COVID (coronavirus) CASES FROM THE TEST SORMAS INSTANCE covid_cases <- readepi::read_sormas(   login = sormas_login,   disease = \"coronavirus\", )"},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"package-vignettes","dir":"","previous_headings":"","what":"Package Vignettes","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"vignette readepi package contains detailed illustrations use function description every argument. can accessed typing command :","code":"# OPEN THE VIGNETTE WITHIN RSTUDIO vignette(\"readepi\")  # OPEN THE VIGNETTE IN YOUR WEB BROWSER. browseVignettes(\"readepi\")"},{"path":[]},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"lifecycle","dir":"","previous_headings":"Development","what":"Lifecycle","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"package currently maturing, defined RECON software lifecycle. means can used production understanding interface may still undergo minor changes.","code":""},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"contributions","dir":"","previous_headings":"Development","what":"Contributions","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"Contributions welcome via pull requests.","code":""},{"path":"https://epiverse-trace.github.io/readepi/index.html","id":"code-of-conduct","dir":"","previous_headings":"Development","what":"Code of Conduct","title":"Read Data from Relational Database Management Systems and Health Information Systems","text":"Please note readepi project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/check_org_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate user-specified organisation unit ID or name. — check_org_unit","title":"Validate user-specified organisation unit ID or name. — check_org_unit","text":"Check whether given organisation unit identifier name valid within DHIS2 instance. valid name provided, corresponding organisation unit ID returned. Otherwise, informative error message thrown.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/check_org_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate user-specified organisation unit ID or name. — check_org_unit","text":"","code":"check_org_unit(login, org_unit, org_units = NULL)"},{"path":"https://epiverse-trace.github.io/readepi/reference/check_org_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate user-specified organisation unit ID or name. — check_org_unit","text":"login httr2 request object preconfigured authentication carrying base url, user name, password. org_unit character denoting name id organisation unit org_units optional data frame organisation units returned get_organisation_units() function.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/check_org_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate user-specified organisation unit ID or name. — check_org_unit","text":"organisation unit ID provided organisation unit ID name exists; otherwise, error thrown suggestion use function lists available organisation units target DHIS2 instance.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/check_program.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate and retrieve program IDs — check_program","title":"Validate and retrieve program IDs — check_program","text":"Checks whether specified program ID name valid DHIS2 instance. name provided valid program name ID, returns corresponding ID; otherwise, error message shown function listing available programs provided.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/check_program.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate and retrieve program IDs — check_program","text":"","code":"check_program(login, program)"},{"path":"https://epiverse-trace.github.io/readepi/reference/check_program.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate and retrieve program IDs — check_program","text":"login httr2 request object preconfigured authentication carrying base url, user name, password. program character program name validated","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/check_program.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate and retrieve program IDs — check_program","text":"program ID provide program name ID exists; otherwise, error thrown suggestion use function lists available programs target DHIS2 instance.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/convert_to_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert numeric values into POSIXct,then into Date — convert_to_date","title":"Convert numeric values into POSIXct,then into Date — convert_to_date","text":"Convert numeric values POSIXct,Date","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/convert_to_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert numeric values into POSIXct,then into Date — convert_to_date","text":"","code":"convert_to_date(data, target_columns)"},{"path":"https://epiverse-trace.github.io/readepi/reference/convert_to_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert numeric values into POSIXct,then into Date — convert_to_date","text":"data data frame numeric columns converted Date target_columns character vector name target numeric columns","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/convert_to_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert numeric values into POSIXct,then into Date — convert_to_date","text":"data frame specified target columns converted Date","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/dhis2_login.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish connection to a DHIS2 instance — dhis2_login","title":"Establish connection to a DHIS2 instance — dhis2_login","text":"Establish connection DHIS2 instance","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/dhis2_login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish connection to a DHIS2 instance — dhis2_login","text":"","code":"dhis2_login(base_url, user_name, password)"},{"path":"https://epiverse-trace.github.io/readepi/reference/dhis2_login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establish connection to a DHIS2 instance — dhis2_login","text":"base_url character base URL target DHIS2 instance user_name character user name password character user's password","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/dhis2_login.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Establish connection to a DHIS2 instance — dhis2_login","text":"httr2_response object connection successfully established","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/dhis2_login.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Establish connection to a DHIS2 instance — dhis2_login","text":"","code":"if (FALSE) { # \\dontrun{   dhis2_log <- dhis2_login(     base_url = \"https://play.im.dhis2.org/stable-2-42-1\",     user_name = \"admin\",     password = \"district\"   ) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/fields_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the user-specified fields are valid — fields_check","title":"Check whether the user-specified fields are valid — fields_check","text":"valid field one corresponds column name specified table.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/fields_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the user-specified fields are valid — fields_check","text":"","code":"fields_check(fields, table_name, login)"},{"path":"https://epiverse-trace.github.io/readepi/reference/fields_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether the user-specified fields are valid — fields_check","text":"fields character vector column names table_name character table name login connection object obtained login() function.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/fields_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the user-specified fields are valid — fields_check","text":"character vector valid fields","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_api_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DHIS2 API version — get_api_version","title":"Get DHIS2 API version — get_api_version","text":"Get DHIS2 API version","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_api_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DHIS2 API version — get_api_version","text":"","code":"get_api_version(login)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_api_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get DHIS2 API version — get_api_version","text":"login httr2_response object returned dhis2_login() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_api_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get DHIS2 API version — get_api_version","text":"numeric minor version API","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_api_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get DHIS2 API version — get_api_version","text":"","code":"if (FALSE) { # \\dontrun{   # login to the DHIS2 instance   dhis2_login <- login(     type = \"dhis2\",     from = \"https://smc.moh.gm/dhis\",     user_name = \"test\",     password = \"Gambia@123\"   )    # get the API version   api_version <- get_api_version(login = dhis2_login) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_data_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all data elements from a specific DHIS2 instance — get_data_elements","title":"Get all data elements from a specific DHIS2 instance — get_data_elements","text":"Get data elements specific DHIS2 instance","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_data_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all data elements from a specific DHIS2 instance — get_data_elements","text":"","code":"get_data_elements(login)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_data_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all data elements from a specific DHIS2 instance — get_data_elements","text":"login httr2_response object returned dhis2_login() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_data_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all data elements from a specific DHIS2 instance — get_data_elements","text":"data frame following two columns: data elements IDs corresponding names.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_data_elements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all data elements from a specific DHIS2 instance — get_data_elements","text":"","code":"if (FALSE) { # \\dontrun{   # establish the connection to the system   dhis2_login <- login(     type = \"dhis2\",     from = \"https://smc.moh.gm/dhis\",     user_name = \"test\",     password = \"Gambia@123\"   )    # retrieve the data elements   data_elements <- get_data_elements(login = dhis2_login) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_entity_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the attribute names and ids of the tracked entities — get_entity_attributes","title":"Get the attribute names and ids of the tracked entities — get_entity_attributes","text":"Use function get ids names features collected tracked entities. ids names used update list query parameters.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_entity_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the attribute names and ids of the tracked entities — get_entity_attributes","text":"","code":"get_entity_attributes(x)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_entity_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the attribute names and ids of the tracked entities — get_entity_attributes","text":"x list tracked entity attributes","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_entity_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the attribute names and ids of the tracked entities — get_entity_attributes","text":"data frame two columns representing tracked entity attributes IDs display names.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_entity_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tracked entity attributes — get_entity_data","title":"Get tracked entity attributes — get_entity_data","text":"Get tracked entity attributes","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_entity_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tracked entity attributes — get_entity_data","text":"","code":"get_entity_data(login, api_version, tracked_entities, org_units)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_entity_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tracked entity attributes — get_entity_data","text":"login httr2_response object returned dhis2_login() function api_version numeric API version obtained get_api_version() function org_units data frame organisation units target DHIS2 instance. output get_organisation_units() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_entity_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tracked entity attributes — get_entity_data","text":"data frame tracked entity attributes","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_event_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get event data from the newer DHIS2 versions (version >= 2.41) — get_event_data","title":"Get event data from the newer DHIS2 versions (version >= 2.41) — get_event_data","text":"Get event data newer DHIS2 versions (version >= 2.41)","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_event_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get event data from the newer DHIS2 versions (version >= 2.41) — get_event_data","text":"","code":"get_event_data(   login,   api_version,   org_unit,   program,   data_elements,   programs,   program_stages,   org_units )"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_event_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get event data from the newer DHIS2 versions (version >= 2.41) — get_event_data","text":"login httr2_response object returned dhis2_login() function api_version numeric API version returned get_api_version() function org_unit character organisation unit ID name program character program ID name data_elements data frame data element IDs names obtained get_data_elements() function programs data frame program IDs names obtained get_programs() function program_stages data frame program stages IDs names obtained get_program_stages() function org_units data frame organisation units IDs names obtained get_organisation_units() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_event_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get event data from the newer DHIS2 versions (version >= 2.41) — get_event_data","text":"data frame data elements obtained event","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_event_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Get event IDs for specific tracked entity — get_event_ids","title":"Get event IDs for specific tracked entity — get_event_ids","text":"Get event IDs specific tracked entity","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_event_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get event IDs for specific tracked entity — get_event_ids","text":"","code":"get_event_ids(tracked_entity)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_event_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get event IDs for specific tracked entity — get_event_ids","text":"tracked_entity list tracked entity data","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_event_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get event IDs for specific tracked entity — get_event_ids","text":"data frame event IDs associated specific tracked entity","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_unit_as_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the organisation units data frame from large to long format — get_org_unit_as_long","title":"Transform the organisation units data frame from large to long format — get_org_unit_as_long","text":"Transform organisation units data frame large long format","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_unit_as_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the organisation units data frame from large to long format — get_org_unit_as_long","text":"","code":"get_org_unit_as_long(login, org_units = NULL)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_unit_as_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the organisation units data frame from large to long format — get_org_unit_as_long","text":"login login object org_units data frame organisation units obtained get_organisation_units() function. Default NULL.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_unit_as_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the organisation units data frame from large to long format — get_org_unit_as_long","text":"data three columns corresponding organisation unit names, IDs, levels","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_unit_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the DHSI2 organization unit's hierarchical levels. — get_org_unit_levels","title":"Extract the DHSI2 organization unit's hierarchical levels. — get_org_unit_levels","text":"level numerical number, 1 referring \"Country\", 2 \"Region\", deepest level denoting health care reporting unit.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_unit_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the DHSI2 organization unit's hierarchical levels. — get_org_unit_levels","text":"","code":"get_org_unit_levels(login)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_unit_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the DHSI2 organization unit's hierarchical levels. — get_org_unit_levels","text":"login httr2_response object returned dhis2_login() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_unit_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the DHSI2 organization unit's hierarchical levels. — get_org_unit_levels","text":"data frame three columns containing organization unit's names, IDs, hierarchical levels.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve DHIS2 organization units, along with their IDs, names, parent IDs, and levels. — get_org_units","title":"Retrieve DHIS2 organization units, along with their IDs, names, parent IDs, and levels. — get_org_units","text":"Retrieve  DHIS2 organization units, along IDs, names, parent IDs, levels.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve DHIS2 organization units, along with their IDs, names, parent IDs, and levels. — get_org_units","text":"","code":"get_org_units(login)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve DHIS2 organization units, along with their IDs, names, parent IDs, and levels. — get_org_units","text":"login httr2_response object returned dhis2_login() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_org_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve DHIS2 organization units, along with their IDs, names, parent IDs, and levels. — get_org_units","text":"data frame organization units following fields: organisation unit id name, well corresponding parent organisation unit id, level.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_organisation_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the organization units from a specific DHIS2 instance — get_organisation_units","title":"Get the organization units from a specific DHIS2 instance — get_organisation_units","text":"Retrieves organisational reporting units levels, builds hierarchy unit tracing ancestries deepest level root.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_organisation_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the organization units from a specific DHIS2 instance — get_organisation_units","text":"","code":"get_organisation_units(login)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_organisation_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the organization units from a specific DHIS2 instance — get_organisation_units","text":"login httr2_response object returned dhis2_login() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_organisation_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the organization units from a specific DHIS2 instance — get_organisation_units","text":"data frame row represents full hierarchy last-level unit keeping hierarchical organizational unit's name ID level, using official level names provided DHIS2 instance like \"Country Name\", \"Country ID\", etc.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_organisation_units.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the organization units from a specific DHIS2 instance — get_organisation_units","text":"Fetches organisation units via get_org_units() function, Fetches organisational unit levels via get_org_unit_levels() function, Filters organisational units deepest level, Traces parent hierarchy deepest unit root, Constructs tabular structure row full lineage.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_organisation_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the organization units from a specific DHIS2 instance — get_organisation_units","text":"","code":"if (FALSE) { # \\dontrun{   # establish the connection to the system   dhis2_login <- login(     type = \"dhis2\",     from = \"https://smc.moh.gm/dhis\",     user_name = \"test\",     password = \"Gambia@123\"   )    # fetch the organisation units   org_units <- get_organisation_units(login = dhis2_login) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_org_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Get organisation units that are associated with a given program — get_program_org_units","title":"Get organisation units that are associated with a given program — get_program_org_units","text":"Get organisation units associated given program","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_org_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get organisation units that are associated with a given program — get_program_org_units","text":"","code":"get_program_org_units(login, program, org_units = NULL)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_org_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get organisation units that are associated with a given program — get_program_org_units","text":"login httr2_response object returned dhis2_login() function program character program ID name org_units data frame organisation units target DHIS2 instance. output get_organisation_units() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_org_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get organisation units that are associated with a given program — get_program_org_units","text":"data frame organisation units associated provided program","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_org_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get organisation units that are associated with a given program — get_program_org_units","text":"","code":"if (FALSE) { # \\dontrun{   # login to the DHIS2 instance   dhis2_login <- login(     type = \"dhis2\",     from = \"https://smc.moh.gm/dhis\",     user_name = \"test\",     password = \"Gambia@123\"   )    # fetch the organisation units   org_units <- get_organisation_units(login = dhis2_login)    # get the organisation units associated with the following program   'E5IUQuHg3Mg'   target_org_units <- get_program_org_units(     login = dhis2_login,     program = \"E5IUQuHg3Mg\",     org_units = org_units   ) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_stages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get program stages for one or more DHSI2 programs — get_program_stages","title":"Get program stages for one or more DHSI2 programs — get_program_stages","text":"Retrieves stages associated specified DHIS2 program IDs, programs none specified. supplied program names IDs found, function displays message proceeds valid ones.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_stages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get program stages for one or more DHSI2 programs — get_program_stages","text":"","code":"get_program_stages(login, programs = NULL, program = NULL)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_stages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get program stages for one or more DHSI2 programs — get_program_stages","text":"login httr2_response object returned dhis2_login() function programs data frame program IDs names obtained get_programs() function program character program ID name","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_stages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get program stages for one or more DHSI2 programs — get_program_stages","text":"data frame following columns: program_id: unique ID program program_name: displayed name program program_stage_name: name stage associate program program_stage_id: ID program stage","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_program_stages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get program stages for one or more DHSI2 programs — get_program_stages","text":"","code":"if (FALSE) { # \\dontrun{   # establish the connection to the DHIS2 instance   dhis2_login <- login(     type = \"dhis2\",     from = \"https://smc.moh.gm/dhis\",     user_name = \"test\",     password = \"Gambia@123\"   )    # get the list of all program stages from the DHIS2 instance   all_program_stages <- get_program_stages(     login = dhis2_login,     program = \"E5IUQuHg3Mg\",     programs = NULL   ) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_programs.html","id":null,"dir":"Reference","previous_headings":"","what":"get all programs from a given specific DHIS2 instance — get_programs","title":"get all programs from a given specific DHIS2 instance — get_programs","text":"function first fetches programs DHIS2 Aggregate system, distinguishes Tracker Aggregate programs.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_programs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get all programs from a given specific DHIS2 instance — get_programs","text":"","code":"get_programs(login)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_programs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get all programs from a given specific DHIS2 instance — get_programs","text":"login httr2_response object returned dhis2_login() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_programs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get all programs from a given specific DHIS2 instance — get_programs","text":"data frame following columns: program ID, program name, program type specifying whether program part Aggregate Tracker system.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_programs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get all programs from a given specific DHIS2 instance — get_programs","text":"","code":"if (FALSE) { # \\dontrun{   # establish the connection to the system   dhis2_login <- login(     type = \"dhis2\",     from = \"https://smc.moh.gm/dhis\",     user_name = \"test\",     password = \"Gambia@123\"   )    # fetch the programs   programs <- get_programs(login = dhis2_login) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_request_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the request query parameters for a specific API version — get_request_params","title":"Get the request query parameters for a specific API version — get_request_params","text":"Get request query parameters specific API version","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_request_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the request query parameters for a specific API version — get_request_params","text":"","code":"get_request_params(api_version)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_request_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the request query parameters for a specific API version — get_request_params","text":"api_version numeric API version","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_request_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the request query parameters for a specific API version — get_request_params","text":"data frame single row containing query parameters needed submit request","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_tracked_entities.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tracked entity attributes, their corresponding IDs and event IDs — get_tracked_entities","title":"Get tracked entity attributes, their corresponding IDs and event IDs — get_tracked_entities","text":"Get tracked entity attributes, corresponding IDs event IDs","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_tracked_entities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tracked entity attributes, their corresponding IDs and event IDs — get_tracked_entities","text":"","code":"get_tracked_entities(login, api_version, org_unit, program, org_units)"},{"path":"https://epiverse-trace.github.io/readepi/reference/get_tracked_entities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tracked entity attributes, their corresponding IDs and event IDs — get_tracked_entities","text":"login httr2_response object returned dhis2_login() function api_version numeric API version obtained get_api_version() function org_unit character organisation unit ID name program character program ID name org_units data frame organisation units target DHIS2 instance. output get_organisation_units() function","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_tracked_entities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tracked entity attributes, their corresponding IDs and event IDs — get_tracked_entities","text":"data frame tracked entity attributes alongside events tracked entity IDs","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/get_tracked_entities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tracked entity attributes, their corresponding IDs and event IDs — get_tracked_entities","text":"","code":"if (FALSE) { # \\dontrun{   # login to the DHIS2 instance   dhis2_login <- login(     type = \"dhis2\",     from = \"https://smc.moh.gm/dhis\",     user_name = \"test\",     password = \"Gambia@123\"   )    # set the program and org unit IDs   program <- \"E5IUQuHg3Mg\"   org_unit <- \"GcLhRNAFppR\"    # get the api version   api_version <- get_api_version(login = dhis2_login)    # get all the organisation units from the DHIS2 instance   org_units <- get_organisation_units(login = dhis2_login)    # get the tracked entity attributes   tracked_entity_attributes <- get_tracked_entities(     login = dhis2_login,     api_version = api_version,     org_unit = org_unit,     program = program,     org_units = org_units   ) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/login.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish a connection to the HIS of interest. — login","title":"Establish a connection to the HIS of interest. — login","text":"current version package supports basic authentication (using username password) personal authentication key (using API key bearer token).","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish a connection to the HIS of interest. — login","text":"","code":"login(   from,   type,   user_name = NULL,   password = NULL,   driver_name = NULL,   db_name = NULL,   port = NULL )"},{"path":"https://epiverse-trace.github.io/readepi/reference/login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establish a connection to the HIS of interest. — login","text":"URL interest. APIs, must base URL (required). type source name (required). current version package covers following RDBMS types: \"ms sql\", \"mysql\", \"postgresql\", \"sqlite\", \"dhis2\", \"sormas\". user_name user name (optional). password user's password (optional). password provided (set NULL), user prompt enter password. driver_name driver name (optional). needed connecting RDBMS . db_name database name (optional). needed connecting RDBMS . port port ID (optional). needed connecting RDBMS .","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/login.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Establish a connection to the HIS of interest. — login","text":"connection object","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/login.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Establish a connection to the HIS of interest. — login","text":"","code":"# connect to the test MySQL server if (FALSE) { # \\dontrun{   login <- login(     from = \"mysql-rfam-public.ebi.ac.uk\",     type = \"mysql\",     user_name = \"rfamro\",     password = \"\",     driver_name = \"\",     db_name = \"Rfam\",     port = 4497   ) } # }  # connect to a DHIS2 instance if (FALSE) { # \\dontrun{   dhi2s_login <- login(     type = \"dhis2\",     from = \"https://smc.moh.gm/dhis\",     user_name = \"test\",     password = \"Gambia@123\"   ) } # }  # connect to SORMAS if (FALSE) { # \\dontrun{   sormas_login <- login(     type = \"sormas\",     from = \"https://demo.sormas.org/sormas-rest\",     user_name = \"SurvSup\",     password = \"Lk5R7JXeZSEc\"   ) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/lookup_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup table — lookup_table","title":"Lookup table — lookup_table","text":"lookup table used establish correspondence R operators, provided expression, DHIS2 SQL operators.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/lookup_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup table — lookup_table","text":"","code":"lookup_table"},{"path":"https://epiverse-trace.github.io/readepi/reference/lookup_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lookup table — lookup_table","text":"data frame 11 rows 3 columns","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/query_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the user-provided query is valid — query_check","title":"Check whether the user-provided query is valid — query_check","text":"define query valid contains either one column names table queried /one R operators provided lookup_table object package.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/query_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the user-provided query is valid — query_check","text":"","code":"query_check(query, login, table_name)"},{"path":"https://epiverse-trace.github.io/readepi/reference/query_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether the user-provided query is valid — query_check","text":"query R expression converted SQL query login connection object obtained login() function. table_name character table name","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/query_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the user-provided query is valid — query_check","text":"Invisibly returns TRUE query valid; throws error otherwise.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_dhis2.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from DHIS2 — read_dhis2","title":"Import data from DHIS2 — read_dhis2","text":"Import data DHIS2","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_dhis2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from DHIS2 — read_dhis2","text":"","code":"read_dhis2(login, org_unit, program)"},{"path":"https://epiverse-trace.github.io/readepi/reference/read_dhis2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from DHIS2 — read_dhis2","text":"login httr2_response object returned dhis2_login() function org_unit character organisation unit ID name program character program ID name","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_dhis2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from DHIS2 — read_dhis2","text":"data frame contains tracked entity attributes event data.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_dhis2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from DHIS2 — read_dhis2","text":"","code":"if (FALSE) { # \\dontrun{   # login to the DHIS2 instance   dhis2_login <- login(     type = \"dhis2\",     from = \"https://smc.moh.gm/dhis\",     user_name = \"test\",     password = \"Gambia@123\"   )   program = \"E5IUQuHg3Mg\"   org_unit = \"GcLhRNAFppR\"   data <- read_dhis2(     login = dhis2_login,     org_unit = org_unit,     program = program   )    # fetch data from the test DHIS2 instance   dhis2_login <- login(     type = \"dhis2\",     from = \"https://play.im.dhis2.org/stable-2-42-1\",     user_name = \"admin\",     password = \"district\"   )   org_unit <- \"DiszpKrYNg8\"   program <- \"IpHINAT79UW\"    data <- read_dhis2(     login = dhis2_login,     org_unit = org_unit,     program = program   ) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/read_rdbms.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from relational database management systems (RDBMS). — read_rdbms","title":"Import data from relational database management systems (RDBMS). — read_rdbms","text":"function assumes user read access database. Importing data RDBMS requires installation appropriate driver compatible server version hosting database. details, see vignette install driver.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_rdbms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from relational database management systems (RDBMS). — read_rdbms","text":"","code":"read_rdbms(login, query)"},{"path":"https://epiverse-trace.github.io/readepi/reference/read_rdbms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from relational database management systems (RDBMS). — read_rdbms","text":"login connection object obtained login() function. query SQL query list following elements: table: string table name fields: vector column names. specified, columns returned. Default NULL. filter: expression vector values used filter rows table interest. length value 'select'. Default NULL.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_rdbms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from relational database management systems (RDBMS). — read_rdbms","text":"data.frame requested data specified query argument.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_rdbms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from relational database management systems (RDBMS). — read_rdbms","text":"","code":"if (FALSE) { # \\dontrun{   # establish the connection to the database   rdbms_login <- login(     from = \"mysql-rfam-public.ebi.ac.uk\",     type = \"mysql\",     user_name = \"rfamro\",     password = \"\",     driver_name = \"\",     db_name = \"Rfam\",     port = 4497   )    # import data where query parameters are specified as a list   authors_list <- read_rdbms(     login = rdbms_login,     query = list(table = \"author\", fields = NULL, filter = NULL)   )    # import data where query parameters is within an SQL query   authors_list <- read_rdbms(     login = rdbms_login,     query = \"select * from author\"   ) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/read_sormas.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from SORMAS — read_sormas","title":"Import data from SORMAS — read_sormas","text":"function returns following columns default: case_id, person_id, sex, date_of_birth, case_origin, country, city, latitude, longitude, case_status, date_onset, date_admission, outcome, date_outcome, contact_id, date_last_contact, date_first_contact, Ct_values.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_sormas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from SORMAS — read_sormas","text":"","code":"read_sormas(login, disease, since = 0)"},{"path":"https://epiverse-trace.github.io/readepi/reference/read_sormas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from SORMAS — read_sormas","text":"login list user's authentication details disease character target disease name since Date value ISO8601 format (YYYY-mm-dd). Default 0 .e. fetch cases beginning data collection.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_sormas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from SORMAS — read_sormas","text":"data frame case data specified disease.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_sormas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import data from SORMAS — read_sormas","text":"Note values date_of_birth column output object might missing elements missing year (NA-12-26), month (2025-NA-01) date (2025-12-NA), combination two missing elements.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/read_sormas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from SORMAS — read_sormas","text":"","code":"if (FALSE) { # \\dontrun{   # establish the connection to the SORMAS system   sormas_login <- login(     type = \"sormas\",     from = \"https://demo.sormas.org/sormas-rest\",     user_name = \"SurvSup\",     password = \"Lk5R7JXeZSEc\"   )   # fetch all COVID (coronavirus) cases from the test SORMAS instance   covid_cases <- read_sormas(     login = sormas_login,     disease = \"coronavirus\"   ) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/request_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Request parameters — request_parameters","title":"Request parameters — request_parameters","text":"request_parameters data frame contains information related request parameters used fetching data specific version  DHIS2. currently contains parameters versions ranging  2.22 2.42.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/request_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request parameters — request_parameters","text":"","code":"request_parameters"},{"path":"https://epiverse-trace.github.io/readepi/reference/request_parameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Request parameters — request_parameters","text":"data frame 3 rows 12 columns","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_fetch_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch all or specific rows and columns from a table — server_fetch_data","title":"Fetch all or specific rows and columns from a table — server_fetch_data","text":"Fetch specific rows columns table","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_fetch_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch all or specific rows and columns from a table — server_fetch_data","text":"","code":"server_fetch_data(login, query)"},{"path":"https://epiverse-trace.github.io/readepi/reference/server_fetch_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch all or specific rows and columns from a table — server_fetch_data","text":"login connection object obtained login() function. query string SQL query","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_fetch_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch all or specific rows and columns from a table — server_fetch_data","text":"data frame data interest","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an SQL query from a list of query parameters — server_make_query","title":"Make an SQL query from a list of query parameters — server_make_query","text":"Make SQL query list query parameters","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an SQL query from a list of query parameters — server_make_query","text":"","code":"server_make_query(table_name, login, filter, select)"},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an SQL query from a list of query parameters — server_make_query","text":"table_name name table server function login connection object obtained login() function. filter vector comma-separated string subset subject IDs select vector column names","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an SQL query from a list of query parameters — server_make_query","text":"string constructed SQL query provided query parameter.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_sql_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R expression into SQL expression — server_make_sql_expression","title":"Convert R expression into SQL expression — server_make_sql_expression","text":"Convert R expression SQL expression","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_sql_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R expression into SQL expression — server_make_sql_expression","text":"","code":"server_make_sql_expression(filter)"},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_sql_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R expression into SQL expression — server_make_sql_expression","text":"filter string R expression","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_sql_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert R expression into SQL expression — server_make_sql_expression","text":"string SQL expression","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_subsetting_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a subsetting query — server_make_subsetting_query","title":"Create a subsetting query — server_make_subsetting_query","text":"Create subsetting query","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_subsetting_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a subsetting query — server_make_subsetting_query","text":"","code":"server_make_subsetting_query(filter, target_columns, table)"},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_subsetting_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a subsetting query — server_make_subsetting_query","text":"filter expression used subset rows target_columns comma-separated list column names returned table name table interest","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/server_make_subsetting_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a subsetting query — server_make_subsetting_query","text":"string SQL query made input arguments","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/show_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the list of tables in a database — show_tables","title":"Display the list of tables in a database — show_tables","text":"Display list tables database","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/show_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the list of tables in a database — show_tables","text":"","code":"show_tables(login)"},{"path":"https://epiverse-trace.github.io/readepi/reference/show_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the list of tables in a database — show_tables","text":"login connection object obtained login() function.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/show_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the list of tables in a database — show_tables","text":"character contains list tables found specified database.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/show_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the list of tables in a database — show_tables","text":"","code":"if (FALSE) { # \\dontrun{ # connect to the test MySQL server   rdbms_login <- login(     from        = \"mysql-rfam-public.ebi.ac.uk\",     type        = \"mysql\",     user_name   = \"rfamro\",     password    = \"\",     driver_name = \"\",     db_name     = \"Rfam\",     port        = 4497   )  # display the list of available tables from this database tables <- show_tables(login = rdbms_login) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_api_specification.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the API specification file from SORMAS — sormas_get_api_specification","title":"Download the API specification file from SORMAS — sormas_get_api_specification","text":"Download API specification file SORMAS","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_api_specification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the API specification file from SORMAS — sormas_get_api_specification","text":"","code":"sormas_get_api_specification(path = tempdir(), overwrite = TRUE)"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_api_specification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the API specification file from SORMAS — sormas_get_api_specification","text":"path character path folder downloaded data dictionary stored. Default NULL .e. data dictionary stored tempdir() overwrite logical used specify whether overwrite overwrite existing data dictionary . Default TRUE","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_api_specification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the API specification file from SORMAS — sormas_get_api_specification","text":"Invisibly returns path folder file stored. path = NULL, file stored R temporary folder : api_specification.json","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_api_specification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the API specification file from SORMAS — sormas_get_api_specification","text":"","code":"# save the SORMAS API specification into the temporary R folder path_api_specs <- sormas_get_api_specification()"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_cases_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get case data from a SORMAS instance — sormas_get_cases_data","title":"Get case data from a SORMAS instance — sormas_get_cases_data","text":"Get case data SORMAS instance","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_cases_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get case data from a SORMAS instance — sormas_get_cases_data","text":"","code":"sormas_get_cases_data(login, disease, since)"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_cases_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get case data from a SORMAS instance — sormas_get_cases_data","text":"login list user's authentication details disease character target disease name since Date value ISO8601 format (YYYY-mm-dd). Default 0 .e. fetch cases beginning data collection.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_cases_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get case data from a SORMAS instance — sormas_get_cases_data","text":"data frame following eight columns: 'case_id', 'person_id', 'date_onset', 'date_admission', 'case_origin', 'case_status', 'outcome', 'date_outcome'. available, 'person_id' 'date_outcome' returned.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_contact_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get contact data from SORMAS — sormas_get_contact_data","title":"Get contact data from SORMAS — sormas_get_contact_data","text":"Get contact data SORMAS","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_contact_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get contact data from SORMAS — sormas_get_contact_data","text":"","code":"sormas_get_contact_data(login, since)"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_contact_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get contact data from SORMAS — sormas_get_contact_data","text":"login list user's authentication details since Date value ISO8601 format (YYYY-mm-dd). Default 0 .e. fetch cases beginning data collection.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_contact_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get contact data from SORMAS — sormas_get_contact_data","text":"data frame following three columns: 'case_id', 'contact_id', 'date_last_contact', 'date_first_contact'. available, 'date_last_contact' returned","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_data_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Download SORMAS data dictionary — sormas_get_data_dictionary","title":"Download SORMAS data dictionary — sormas_get_data_dictionary","text":"Download SORMAS data dictionary","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_data_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download SORMAS data dictionary — sormas_get_data_dictionary","text":"","code":"sormas_get_data_dictionary(path = tempdir(), overwrite = TRUE)"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_data_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download SORMAS data dictionary — sormas_get_data_dictionary","text":"path character path folder downloaded data dictionary stored. Default NULL .e. data dictionary stored tempdir() overwrite logical used specify whether overwrite overwrite existing data dictionary . Default TRUE","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_data_dictionary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download SORMAS data dictionary — sormas_get_data_dictionary","text":"character path folder data dictionary stored. path = NULL, file stored R temporary folder : dictionary.xlsx","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_data_dictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download SORMAS data dictionary — sormas_get_data_dictionary","text":"","code":"# download and save the data dictionary in the default R temporary directory path_to_dictionary <- sormas_get_data_dictionary()"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_diseases.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the list of disease names from a SORMAS instance — sormas_get_diseases","title":"Get the list of disease names from a SORMAS instance — sormas_get_diseases","text":"Get list disease names SORMAS instance","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_diseases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the list of disease names from a SORMAS instance — sormas_get_diseases","text":"","code":"sormas_get_diseases(login)"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_diseases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the list of disease names from a SORMAS instance — sormas_get_diseases","text":"login list user's authentication details","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_diseases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the list of disease names from a SORMAS instance — sormas_get_diseases","text":"vector list disease names SORMAS instance","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_diseases.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the list of disease names from a SORMAS instance — sormas_get_diseases","text":"","code":"if (FALSE) { # \\dontrun{   # establish the connection to the SORMAS system   sormas_login <- login(     type = \"sormas\",     from = \"https://demo.sormas.org/sormas-rest\",     user_name = \"SurvSup\",     password = \"Lk5R7JXeZSEc\"   )   disease_names <- sormas_get_diseases(     login = sormas_login   ) } # }"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_pathogen_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pathogen tests data from SORMAS — sormas_get_pathogen_data","title":"Get pathogen tests data from SORMAS — sormas_get_pathogen_data","text":"Get pathogen tests data SORMAS","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_pathogen_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pathogen tests data from SORMAS — sormas_get_pathogen_data","text":"","code":"sormas_get_pathogen_data(login, since)"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_pathogen_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pathogen tests data from SORMAS — sormas_get_pathogen_data","text":"login list user's authentication details since Date value ISO8601 format (YYYY-mm-dd). Default 0 .e. fetch cases beginning data collection.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_pathogen_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get pathogen tests data from SORMAS — sormas_get_pathogen_data","text":"data frame following two columns: 'case_id', 'Ct_values'","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_persons_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get personal data of cases from a SORMAS instance — sormas_get_persons_data","title":"Get personal data of cases from a SORMAS instance — sormas_get_persons_data","text":"Get personal data cases SORMAS instance","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_persons_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get personal data of cases from a SORMAS instance — sormas_get_persons_data","text":"","code":"sormas_get_persons_data(login, since)"},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_persons_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get personal data of cases from a SORMAS instance — sormas_get_persons_data","text":"login list user's authentication details since Date value ISO8601 format (YYYY-mm-dd). Default 0 .e. fetch cases beginning data collection.","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/sormas_get_persons_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get personal data of cases from a SORMAS instance — sormas_get_persons_data","text":"data frame following eight columns: 'case_id', 'sex', 'date_of_birth', 'country', 'city', 'latitude', 'longitude'","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/url_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the value for the base_url argument has a correct structure — url_check","title":"Check if the value for the base_url argument has a correct structure — url_check","text":"Check value base_url argument correct structure","code":""},{"path":"https://epiverse-trace.github.io/readepi/reference/url_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the value for the base_url argument has a correct structure — url_check","text":"","code":"url_check(base_url)"},{"path":"https://epiverse-trace.github.io/readepi/reference/url_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the value for the base_url argument has a correct structure — url_check","text":"throws error domain provided URL valid, (invisibly) TRUE","code":""},{"path":"https://epiverse-trace.github.io/readepi/news/index.html","id":"readepi-102","dir":"Changelog","previous_headings":"","what":"readepi 1.0.2","title":"readepi 1.0.2","text":"CRAN release: 2025-10-27","code":""},{"path":"https://epiverse-trace.github.io/readepi/news/index.html","id":"readepi-102-1","dir":"Changelog","previous_headings":"","what":"readepi 1.0.2","title":"readepi 1.0.2","text":"CRAN release: 2025-10-27","code":""},{"path":"https://epiverse-trace.github.io/readepi/news/index.html","id":"enhancements-1-0-2","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"readepi 1.0.2","text":"Update document output syntax vignettes (#87, @Karim-Mane). Make sure evaluate CRAN code chunk line 86 123 (#87, @Karim-Mane). Split previous coded chunk examples import data RDBMS, set eval=FALSE avoid CRAN CI platform fails (#88, @Karim-Mane).","code":""},{"path":[]},{"path":"https://epiverse-trace.github.io/readepi/news/index.html","id":"enhancements-1-0-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"readepi 1.0.0","text":"Modified package design harmonised data import mechanism RDBMS, DHIS2, SORMAS (#80, @Karim-Mane). login(), read_dhis2(), read_sormas() functions helpers connection system data extraction DHIS2 SORMAS (#80, @Karim-Mane). Added new vignettes (query_parameters.Rmd install_drivers.Rmd) describe, respectively, use query parameters install Microsoft drivers necessary import data MS SQL servers Linux OSX systems (#80, @Karim-Mane). Added Emmanuel Kabuga author valuable contribution release (#80, @Karim-Mane).","code":""},{"path":"https://epiverse-trace.github.io/readepi/news/index.html","id":"readepi-001","dir":"Changelog","previous_headings":"","what":"readepi 0.0.1","title":"readepi 0.0.1","text":"Added NEWS.md file track changes package.","code":""}]
