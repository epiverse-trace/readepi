[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 readepi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/readepi.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"readepi: Reading data from health information systems","text":"Health-related data general, epidemiological data particular, stored files, relation database management systems (RDBMS), health information systems (). category includes numerous options, various file formats, RDBMS types, APIs. Import data repositories involve usage different format-specific functions API-specific packages, exhausting task end users. main objective {readepi} package simplify process reading health-related data diverse sources, allowing user focus downstream analysis tasks. {readepi} also streamlines way data read single function —imports data specified systems (can SQL database, API) using readepi() function, returns list object containing one data frames. current implementation {readepi} provides function reading data three common : (REDCap, DHIS2, Fingertips), RDBMS MS SQL, MySQL, PostgreSQL. utility functions processing manipulating imported data, row column/row sub-setting, also included package.","code":"# LOAD readepi library(\"readepi\") # nolint"},{"path":"/articles/readepi.html","id":"reading-data-from-rdbms","dir":"Articles","previous_headings":"","what":"Reading data from RDBMS","title":"readepi: Reading data from health information systems","text":"Health related research data usually stored either relational databases non-SQL databases. example, MRCG@LSHTM, projects data stored relational databases. SQL-based database run specific sever. current version {readepi} package supports reading data MS SQL, MySQL, PostgreSQL servers. read data MS SQL database, user expected , least, read access database. user credential details stored file. Also, users using operating system Microsoft need appropriate MS driver installed system. following section show install drivers describe structure credentials file.","code":""},{"path":"/articles/readepi.html","id":"ms-sql-drivers-for-osx-based-systems","dir":"Articles","previous_headings":"Reading data from RDBMS","what":"MS SQL drivers for OSX-based systems","title":"readepi: Reading data from health information systems","text":"Reading data Unix-based systems require install MS ODBC driver compatible version target MS SQL server. example, ODBC Driver 17 compatible SQL server 2019, version 15.0. Mac users can follow instructions install MS SQL ODBC driver. Choose appropriate driver, open terminal, run instructions. installation MS SQL driver 17 Mac installation MS SQL driver 13.1 Mac","code":"driver=17 brew install unixodbc brew tap microsoft/mssql-release https://github.com/Microsoft/homebrew-mssql-release brew update brew install msodbcsql${driver} brew install mssql-tools ODBCSYSINI=/ brew install unixodbc brew tap microsoft/mssql-release https://github.com/Microsoft/homebrew-mssql-release brew update brew install msodbcsql@13.1.9.2 brew install mssql-tools@14.0.6.0 ODBCSYSINI=/"},{"path":"/articles/readepi.html","id":"ms-sql-drivers-for-linux-based-systems","dir":"Articles","previous_headings":"Reading data from RDBMS","what":"MS SQL drivers for Linux-based systems","title":"readepi: Reading data from health information systems","text":"Note requires Ubuntu 16.04 . Choose appropriate driver, open terminal type instructions : installation MS SQL driver version 17 Ubuntu installation MS SQL driver version 13.1 Ubuntu installation MS SQL driver Linux distributions install MS SQL driver Linux distributions, Debian Fedora, click follow instructions. installation, check installed drivers using: command return list installed drivers facing issues driver installation process, consult odbc github page MS documentation topic. also important view data stored MS SQL server. purpose, recommend install graphical user interface (GUI) Azure Data Studio.","code":"driver=17 sudo su curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - curl https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/prod.list > /etc/apt/sources.list.d/mssql-release.list exit  sudo apt-get update sudo ACCEPT_EULA=Y apt-get install -y msodbcsql${driver} sudo ACCEPT_EULA=Y apt-get install -y mssql-tools echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bashrc source ~/.bashrc sudo apt-get install -y unixodbc-dev sudo su curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - curl https://packages.microsoft.com/config/ubuntu/16.04/prod.list > /etc/apt/sources.list.d/mssql-release.list exit sudo apt-get update sudo ACCEPT_EULA=Y apt-get install msodbcsql sudo ACCEPT_EULA=Y apt-get install mssql-tools echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bashrc source ~/.bashrc sudo apt-get install unixodbc-dev odbc::odbcListDrivers()"},{"path":"/articles/readepi.html","id":"credentials-file","dir":"Articles","previous_headings":"Reading data from RDBMS","what":"Credentials file","title":"readepi: Reading data from health information systems","text":"access data stored database management system requires valid user credentials, user name password. {readepi} package expect user credential details saved tab-separated file. path constitute value credentials_file argument readepi() function. credential (tab-delimited) file must contain following columns: user_name: user name.  password: user password (REDCap, corresponds token).  host_name: host name (REDCap, corresponds host URL).  project_id: name database (relation DB) name project (REDCap API) contains data interest.  comment: (optional) brief description project database interest.  dbms: type DBMS. Possible values : REDCap reading REDCap; MySQL reading MySQL server, SQLServer reading MS SQL server, PostgreSQL reading PostgreSQL system.  port: (optional) port ID, used MS SQL servers. see structure toy credentials file used template {readepi} package, use show_example_file() function shown . addition credentials file, readepi() function expects following arguments: data_source: (required) URL target . driver_name: (optional) name MS driver (MS SQL servers). records: (optional) vector comma-separated string subject IDs. specified, records correspond subjects imported. fields: (optional) vector comma-separated string column names. provided, columns imported. id_position: (optional) column position variable unique identifies subjects. ’s default value 1. id_col_name: (optional) name column unique identifies subjects.","code":"# DISPLAY THE STRUCTURE OF THE TEMPLATE CREDENTIALS FILE show_example_file()"},{"path":"/articles/readepi.html","id":"examples","dir":"Articles","previous_headings":"Reading data from RDBMS","what":"Examples","title":"readepi: Reading data from health information systems","text":"section contains various examples demonstrating {readepi} imports data databases. assume credentials stored file explained . Furthermore, examples based MySQL server need user supply driver name.","code":"# DEFINING THE PATH TO THE TEMPLATE CREDENTIALS FILE credentials_file <- system.file(\"extdata\", \"test.ini\", package = \"readepi\")"},{"path":"/articles/readepi.html","id":"listing-names-of-all-tables-in-a-database","dir":"Articles","previous_headings":"Reading data from RDBMS > Examples","what":"Listing names of all tables in a database","title":"readepi: Reading data from health information systems","text":"display list tables database interest, use:","code":"show_tables(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   driver_name      = \"\" ) # use driver_name = \"ODBC Driver 17 for SQL Server\" when reading from MS SQL # server"},{"path":"/articles/readepi.html","id":"fetching-data-using-table-names","dir":"Articles","previous_headings":"Reading data from RDBMS > Examples","what":"Fetching data using table names","title":"readepi: Reading data from health information systems","text":"","code":"# VISUALIZING THE FIRST 5 ROWS OF THE TABLE 'author' visualise_table(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"author\", # this is the table name   driver_name      = \"\" )  # READING ALL FIELDS AND ALL RECORDS FROM ONE TABLE (`author`) dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"author\", # this is the table name   driver_name      = \"\" )  # READING SPECIFIED FIELDS AND ALL RECORDS FROM ONE TABLE fields <- \"author_id,name,last_name,initials\" dat    <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"author\", # this is the table name   driver_name      = \"\",   fields           = fields # these are  the columns of interest. )  # READING SPECIFIED RECORDS AND ALL FIELDS FROM ONE TABLE records <- \"1, 34, 15, 70, 118, 20\" dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"author\", # this is the table name   driver_name      = \"\",   records          = records,   id_position      = 1L )  # READING SPECIFIED FIELDS AND RECORDS ONE THE TABLE dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"author\", # this is the table name   driver_name      = \"\",   records          = records,   fields           = fields,   id_col_name      = \"author_id\" )  # READING DATA FROM SEVERAL TABLES table_names <- c(\"author\", \"family_author\") dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = table_names, # this is the table name   driver_name      = \"\" )  # READING DATA FROM SEVERAL TABLES AND SUBSETTING FIELDS ACROSS TABLES fields <- c(   \"author_id,name,last_name,initials\",   \"rfam_acc,author_id\" ) # the first string in the field vector corresponds to the name of the # columns of interest from the first table specified in the `table_names` # argument and so on... dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = table_names, # this is the table name   driver_name      = \"\",   fields           = fields )  # READING DATA FROM SEVERAL TABLES AND SUBSETTING RECORDS ACROSS TABLES records <- c(   \"1, 34, 15, 70, 118, 20\",   \"RF00591,RF01420,RF01421\" ) # \"note that first string in the records vector corresponds to the records of # interest from the first table specified in the `table_name` argument and so # on... when the id column is not the first column in a table, # use the `id_position`\" dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = table_names, # this is the table name   driver_name      = \"\",   records          = records,   id_position      = c(1, 1) # nolint )  # READING DATA FROM SEVERAL TABLES AND SUBSETTING RECORDS AND FIELDS ACROSS # TABLES dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = table_names, # this is the table name   driver_name      = \"\",   records          = records,   fields           = fields,   id_col_name      = c(\"author_id\", \"rfam_acc\") )"},{"path":"/articles/readepi.html","id":"fetching-data-using-an-sql-query","dir":"Articles","previous_headings":"Reading data from RDBMS > Examples","what":"Fetching data using an SQL query","title":"readepi: Reading data from health information systems","text":"","code":"# SELECT FEW COLUMNS FROM ONE TABLE AND LEFT JOIN WITH ANOTHER TABLE dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"select author.author_id, author.name,   family_author.author_id from author left join family_author on   author.author_id = family_author.author_id\",   driver_name      = \"\" )  # SELECT ALL DATA FROM THE author TABLE dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"select * from author\",   driver_name      = \"\" )  # SELECT FEW COLUMNS FROM THE author TABLE dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"select author_id, name, last_name from author\",   driver_name      = \"\" )  # SELECT FEW RECORDS FROM THE author TABLE dat <- readepi(   data_source = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   source = \"select * from author where author_id in ('1','20','50')\",   driver_name = \"\" )  # SELECT FEW RECORDS AND FIELDS FROM THE author TABLE dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"select author_id, name, last_name from author where   author_id in ('1','20','50')\",   driver_name      = \"\" )"},{"path":"/articles/readepi.html","id":"reading-data-from-his","dir":"Articles","previous_headings":"Reading data from RDBMS","what":"Reading data from HIS","title":"readepi: Reading data from health information systems","text":"current version {readepi} supports reading data three common : REDCap, DHIS2, Fingertips.","code":""},{"path":"/articles/readepi.html","id":"importing-data-from-redcap","dir":"Articles","previous_headings":"Reading data from RDBMS > Reading data from HIS","what":"Importing data from REDCap","title":"readepi: Reading data from health information systems","text":"Research Electronic Data Capture (REDCap) web-based application workflow methodology designing clinical translational research databases. import data REDCap-based repo, readepi() function takes following arguments: data_source: URL REDCap server credentials_file: credentials file (mandatory) records: list desired records (optional) fields: list desired columns (optional) data associated metadata returned successful import.","code":"# READING ALL FIELDS AND RECORDS FROM A REDCap PROJECT dat <- readepi(   data_source      = \"https://bbmc.ouhsc.edu/redcap/api/\",   credentials_file = credentials_file ) project_data <- dat[[\"data\"]] project_metadeta <- dat[[\"metadata\"]]  # READING SPECIFIC FIELDS AND ALL RECORDS FROM THE PROJECT fields <- c(\"record_id\", \"name_first\", \"age\", \"bmi\") dat <- readepi(   data_source      = \"https://bbmc.ouhsc.edu/redcap/api/\",   credentials_file = credentials_file,   fields           = fields )  # READING SPECIFIC RECORDS AND ALL FIELDS FROM THE PROJECT records <- c(\"1\", \"3\", \"5\") dat <- readepi(   data_source      = \"https://bbmc.ouhsc.edu/redcap/api/\",   credentials_file = credentials_file,   records          = records,   id_col_name      = \"record_id\" )  # READING SPECIFIC RECORDS AND FIELDS FROM THE PROJECT dat <- readepi(   data_source      = \"https://bbmc.ouhsc.edu/redcap/api/\",   credentials_file = credentials_file,   records          = records,   fields           = fields,   id_col_name      = \"record_id\" ) project_data <- dat[[\"data\"]] project_metadeta <- dat[[\"metadata\"]]"},{"path":"/articles/readepi.html","id":"importing-data-from-dhis2","dir":"Articles","previous_headings":"Reading data from RDBMS","what":"Importing data from DHIS2","title":"readepi: Reading data from health information systems","text":"DHIS2 open source software transformed global health information management. readepi() function can import data DHIS2-based repositories following arguments: data_source: URL target DHIS2 system (required) credentials_file: credentials file (required) dataset: vector comma-separated list dataset identifier (optional) organisation_unit: vector comma-separated list organisation unit identifier (optional) data_element_group: vector comma-separated list data element group (optional) start_date: start date time span values export (required) end_date: end date time span values export (required) id_col_name: column name records interest (optional) records: list desired records (optional) fields: list desired columns (optional)","code":"# GETTING THE DATA ELEMENT IDENTIFIERS AND NAMES data_elements <- get_dhis2_attributes(   base_url = \"https://play.dhis2.org/dev/\",   username = \"admin\",   password = \"district\",   which    = \"dataElements\" )  # GETTING THE DATASET IDENTIFIERS AND NAMES datasets <- get_dhis2_attributes(   base_url = \"https://play.dhis2.org/dev/\",   username = \"admin\",   password = \"district\",   which    = \"dataSets\" )  # GETTING THE ORGANISATION UNIT IDENTIFIERS AND NAMES organisation_units <- get_dhis2_attributes(   base_url = \"https://play.dhis2.org/dev/\",   username = \"admin\",   password = \"district\",   which    = \"organisationUnits\" )  # GETTING THE DATA ELEMENT GROUP IDENTIFIERS AND NAMES data_element_groups <- get_dhis2_attributes(   base_url = \"https://play.dhis2.org/dev/\",   username = \"admin\",   password = \"district\",   which    = \"dataElementGroups\" )  # READING THE DATASET ID `pBOMPrpg1QX` dat <- readepi(   data_source        = \"https://play.dhis2.org/dev\",   credentials_file   = credentials_file,   dataset            = \"pBOMPrpg1QX\",   organisation_unit  = \"DiszpKrYNg8\",   data_element_group = NULL,   start_date         = \"2014\",   end_date           = \"2023\" )  # READING DATA FROM 2 DATASETS `pBOMPrpg1QX` dat <- readepi(   data_source        = \"https://play.dhis2.org/dev\",   credentials_file   = credentials_file,   dataset            = \"pBOMPrpg1QX,BfMAe6Itzgt\",   organisation_unit  = \"DiszpKrYNg8\",   data_element_group = NULL,   start_date         = \"2014\",   end_date           = \"2023\" )  # READING SPECIFIC DATA ELEMENTS FROM THE DATASET ID `pBOMPrpg1QX` data_elts <- c(\"FTRrcoaog83\", \"eY5ehpbEsB7\", \"Ix2HsbDMLea\") dat <- readepi(   data_source        = \"https://play.dhis2.org/dev\",   credentials_file   = credentials_file,   dataset            = \"pBOMPrpg1QX\",   organisation_unit  = \"DiszpKrYNg8\",   data_element_group = NULL,   start_date         = \"2014\",   end_date           = \"2023\",   records            = data_elts,   id_col_name        = \"dataElement\" )  # READING SPECIFIC COLUMNS FROM A DATASET dat <- readepi(   data_source        = \"https://play.dhis2.org/dev\",   credentials_file   = credentials_file,   dataset            = \"pBOMPrpg1QX,BfMAe6Itzgt\",   organisation_unit  = \"DiszpKrYNg8\",   data_element_group = NULL,   start_date         = \"2014\",   end_date           = \"2023\",   fields             = c(\"dataElement\", \"period\", \"value\") ) test_data <- data[[\"data\"]]"},{"path":"/articles/readepi.html","id":"importing-data-from-fingertips","dir":"Articles","previous_headings":"Reading data from RDBMS","what":"Importing data from Fingertips","title":"readepi: Reading data from health information systems","text":"Fingertips repository public health data indicators England, data organised themed profiles. readepi() function allows import data Fingertips-based APIs using following arguments: indicator_id: indicator ID indicator_name: indicator name area_type_id: area type ID. determines geographic area imported data (required) parent_area_type_id: parent area type code specified area type ID profile_id: profile ID profile_name: profile name domain_id: domain ID domain_name: domain name records: list desired records fields: list desired columns id_col_name: column name records interest id_position: column position variable unique identifies subjects. default 1. worth noting , reading data, readepi() function makes wrapper-calls major functions fingertipsR, pre-existing R package reads data Fingertips databases.","code":""},{"path":"/articles/readepi.html","id":"examples-1","dir":"Articles","previous_headings":"Reading data from RDBMS > Importing data from Fingertips","what":"Examples","title":"readepi: Reading data from health information systems","text":"section provides various examples demonstrating {readepi} imports data Fingertips-based APIs.","code":"# GET THE INFORMATION ABOUT THE INDICATOR PROFILES, DOMAIN, AREA TYPE, ... metadata <- get_fingertips_metadata() head(metadata[[\"indicator_profile_domain\"]]) head(metadata[[\"indicator_ids_names\"]]) head(metadata[[\"area_type\"]])  # IMPORTING DATA USING THE INDICATOR ID dat <- readepi(   indicator_id = 90362L,   area_type_id = 202L )  # IMPORTING DATA USING THE INDICATOR NAME dat <- readepi(   indicator_name = \"Healthy life expectancy at birth\",   area_type_id   = 202L )  # IMPORTING DATA USING THE DOMAIN NAME dat <- readepi(   domain_name  = \"A. Overarching indicators\",   area_type_id = 202L )  dat <- readepi(   indicator_name = \"Healthy life expectancy at birth\",   area_type_id   = 202L,   domain_name    = \"A. Overarching indicators\" )  # IMPORTING DATA USING THE PROFILE ID dat <- readepi(   profile_id   = 19L,   area_type_id = 202L )  # IMPORTING DATA FROM SPECIFIC INDICATOR, DOMAIN, PROFILE, AREA TYPE dat <- readepi(   indicator_id        = 90362L,   indicator_name      = \"Healthy life expectancy at birth\",   area_type_id        = 202L,   parent_area_type_id = 6L,   profile_id          = 19L,   profile_name        = \"Public Health Outcomes Framework\",   domain_id           = 1000049L,   domain_name         = \"A. Overarching indicators\",   fields              = NULL,   records             = NULL,   id_position         = NULL,   id_col_name         = NULL )  # IMPORTING DATA AND SUBSETTING SPECIFIC RECORDS AND FIELDS dat <- readepi(   indicator_id = 90362L,   area_type_id = 202L,   fields       = c(\"IndicatorID\", \"AreaCode\", \"Age\", \"Value\"),   records      = c(\"E92000001\", \"E12000002\", \"E12000009\"),   id_col_name  = \"AreaCode\" )"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Karim Mané. Author, maintainer. Bubacarr Bah. Contributor. Bankolé Ahadzie. Contributor. Nuredin Mohammed. Contributor. Abdoelnaser Degoot. Contributor. Hugo Gruson. Reviewer. Pratik Gupte. Reviewer. Andree Valle-Campos. Reviewer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Karim Mané, Nuredin Mohammed, Bankolé Ahadzie, Abdoelnaser Degoot, Bubacarr Bah (2023). readepi: Read Data Health Information Systems website: https://github.com/epiverse-trace/readepi/","code":"@Manual{,   title = {Read Data From Health Information Systems},   author = {Karim Mané and Nuredin Mohammed and Bubacarr Bah and Bankolé Ahadzie and Abdoelnaser Degoot},   year = {2023},   url = {https://github.com/epiverse-trace/readepi}, }"},{"path":"/index.html","id":"readepi-read-data-from-health-information-systems-","dir":"","previous_headings":"","what":"Read Data From Health Information Systems","title":"Read Data From Health Information Systems","text":"{readepi} R package reading data several health information systems () including public repositories, relational database management systems (RDBMS). {readepi} currently supports reading data followings: RDBMS (Relational Database Management Systems) MS SQL, MySQL, PostgreSQL  REDCap: Research Electronic Data Capture - secure web application building managing online surveys databases DHIS2: open source web-based platform managing health information Fingertips: repository public health indicators England {readepi} returns list object containing one data frames. {readepi} also number auxiliary functions allow importing subset original dataset. {readepi} developed Epiverse-TRACE team Medical Research Center, Gambia unit London School Hygiene Tropical Medicine.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read Data From Health Information Systems","text":"can install development version {readepi} GitHub :","code":"# install.packages(\"devtools\") # devtools::install_github(\"epiverse-trace/readepi\", build_vignettes = TRUE) if (!require(\"pak\")) install.packages(\"pak\") pak::pak(\"epiverse-trace/readepi\") library(readepi)"},{"path":"/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick start","title":"Read Data From Health Information Systems","text":"main function {readepi} readepi(). reads data specified source. readepi() function accepts user-supplied string (API’s URL) argument. specific arguments can provided depending data source (see vignette details). examples show use readepi() function import data variety sources.","code":""},{"path":"/index.html","id":"reading-data-from-rdbms-and-his","dir":"","previous_headings":"Quick start","what":"Reading data from RDBMS and HIS","title":"Read Data From Health Information Systems","text":"readepi() function can import data variety RDBMS, including MS SQL, MySQL, PostgreSQL. Reading data RDBMS requires following: MS SQL driver compatible version DBMS interest. vignette describes install appropriate driver database management system. Valid Credentials access server. user credential details expected stored file supplied argument readepi() function. Use show_example_file() function visualize structure template credential file. Users can read data RDBMS providing details tables interest SQL query (information, see vignette).","code":"# DISPLAY THE STRUCTUTRE OF THE TEMPLATE CREDENTIAL FILE show_example_file()  # DEFINE THE PATH TO THE CREDENTIAL FILE credentials_file <- system.file(\"extdata\", \"test.ini\", package = \"readepi\")  # READING FILE FROM A PROJECT IN A REDCap DATABASE dat <- readepi(   data_source      = \"https://bbmc.ouhsc.edu/redcap/api/\",   credentials_file = credentials_file ) project_data     <- dat$data # accessing the actual data project_metadeta <- dat$metadata # accessing the metadata associated with project  # VIEWING THE LIST OF ALL TABLES IN A MySQL DATABASE show_tables(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   driver_name      = \"\" # note that this example MySQL server does not require a driver )  # VISUAIZE FIRST 5 ROWS OF THE TABLE 'AUTHOR' visualise_table(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"author\", # this is the table name   driver_name      = \"\" )  # READING ALL FILEDS AND RECORDS FROM A MySQL SERVER dat <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = credentials_file,   from             = \"author\", # this is the table name   driver_name      = \"\" )  # READING DATA FROM DHIS2 dat <- readepi(   data_source        = \"https://play.dhis2.org/dev\",   credentials_file   = credentials_file,   dataset            = \"pBOMPrpg1QX\",   organisation_unit  = \"DiszpKrYNg8\",   data_element_group = NULL,   start_date         = \"2014\",   end_date           = \"2023\" )  # READING DATA FROM THE FINGERTIPS REPOSITORY dat <- readepi(   indicator_id        = 90362,   area_type_id        = 202,   parent_area_type_id = 6 # optional )"},{"path":"/index.html","id":"package-vignettes","dir":"","previous_headings":"","what":"Package Vignettes","title":"Read Data From Health Information Systems","text":"vignette {readepi} package contains detailed illustrations use function description every argument. can accessed typing command :","code":"# OPEN THE VIGNETTE WITHIN RSTUDIO vignette(\"readepi\")  # OPEN THE VIGNETTE IN YOUR WEB BROWSER. browseVignettes(\"readepi\")"},{"path":[]},{"path":"/index.html","id":"lifecycle","dir":"","previous_headings":"Development","what":"Lifecycle","title":"Read Data From Health Information Systems","text":"package currently maturing, defined RECON software lifecycle. means can used production understanding interface may still undergo minor changes.","code":""},{"path":"/index.html","id":"contributions","dir":"","previous_headings":"Development","what":"Contributions","title":"Read Data From Health Information Systems","text":"Contributions welcome via pull requests.","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"Development","what":"Code of Conduct","title":"Read Data From Health Information Systems","text":"Please note readepi project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/connect_to_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Establish connection to the server — connect_to_server","title":"Establish connection to the server — connect_to_server","text":"Establish connection server","code":""},{"path":"/reference/connect_to_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Establish connection to the server — connect_to_server","text":"","code":"connect_to_server(dbms, driver_name, host, database_name, user, password, port)"},{"path":"/reference/connect_to_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Establish connection to the server — connect_to_server","text":"dbms database management system type driver_name driver name host host server name database_name database name user user name password user's password port server port ID","code":""},{"path":"/reference/connect_to_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Establish connection to the server — connect_to_server","text":"connection object","code":""},{"path":"/reference/connect_to_server.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Establish connection to the server — connect_to_server","text":"","code":"if (FALSE) { con <- connect_to_server(   dbms          = \"MySQL\",   driver_name   = \"\",   host          = \"mysql-rfam-public.ebi.ac.uk\",   database_name = \"Rfam\",   user          = \"rfamro\",   password      = \"\",   port          = 4497 ) }"},{"path":"/reference/dhis2_check_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the DHIS2 attributes for data import — dhis2_check_attributes","title":"Check the DHIS2 attributes for data import — dhis2_check_attributes","text":"Check DHIS2 attributes data import","code":""},{"path":"/reference/dhis2_check_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the DHIS2 attributes for data import — dhis2_check_attributes","text":"","code":"dhis2_check_attributes(   username,   password,   base_url,   dataset,   organisation_unit = NULL,   data_element_group = NULL )"},{"path":"/reference/dhis2_check_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the DHIS2 attributes for data import — dhis2_check_attributes","text":"username user name password user's password base_url web address server user wishes log dataset dataSets identifiers organisation_unit organisationUnits identifiers data_element_group dataElementGroups identifiers","code":""},{"path":"/reference/dhis2_check_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the DHIS2 attributes for data import — dhis2_check_attributes","text":"list 7 elements type character.","code":""},{"path":"/reference/dhis2_check_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the DHIS2 attributes for data import — dhis2_check_attributes","text":"","code":"if (FALSE) { attributes <- dhis2_check_attributes(   username           = \"admin\",   password           = \"district\",   base_url           = \"https://play.dhis2.org/dev/\",   dataset            = \"pBOMPrpg1QX\",   organisation_unit  = \"DiszpKrYNg8\",   data_element_group = NULL ) }"},{"path":"/reference/dhis2_get_relevant_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the relevant dataset — dhis2_get_relevant_attributes","title":"Get the relevant dataset — dhis2_get_relevant_attributes","text":"Get relevant dataset","code":""},{"path":"/reference/dhis2_get_relevant_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the relevant dataset — dhis2_get_relevant_attributes","text":"","code":"dhis2_get_relevant_attributes(   attribute_id = NULL,   base_url = \"https://play.dhis2.org/dev/\",   username = \"admin\",   password = \"district\",   which = \"dataSets\" )"},{"path":"/reference/dhis2_get_relevant_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the relevant dataset — dhis2_get_relevant_attributes","text":"attribute_id comma-separated list DHIS2 attribute ids. ids dataSet organisationUnit. base_url web address server user wishes log username user name password user's password target DHIS2 attribute name","code":""},{"path":"/reference/dhis2_get_relevant_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the relevant dataset — dhis2_get_relevant_attributes","text":"list 2 elements: character string target attributes ID(s) data.frame contains data interest specified DHIS2 attribute ids.","code":""},{"path":"/reference/dhis2_get_relevant_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the relevant dataset — dhis2_get_relevant_attributes","text":"","code":"if (FALSE) { result <- dhis2_get_relevant_attributes(   attribute_id = \"pBOMPrpg1QX,BfMAe6Itzgt\",   base_url = \"https://play.dhis2.org/dev/\",   username = \"admin\",   password = \"district\",   which = \"dataSets\" ) }"},{"path":"/reference/dhis2_subset_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset fields when reading from DHIS2 — dhis2_subset_fields","title":"Subset fields when reading from DHIS2 — dhis2_subset_fields","text":"Subset fields reading DHIS2","code":""},{"path":"/reference/dhis2_subset_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset fields when reading from DHIS2 — dhis2_subset_fields","text":"","code":"dhis2_subset_fields(data, fields)"},{"path":"/reference/dhis2_subset_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset fields when reading from DHIS2 — dhis2_subset_fields","text":"data input data frame fields vector fields select data frame","code":""},{"path":"/reference/dhis2_subset_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset fields when reading from DHIS2 — dhis2_subset_fields","text":"object type data.frame data contains fields interest","code":""},{"path":"/reference/dhis2_subset_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset fields when reading from DHIS2 — dhis2_subset_fields","text":"","code":"if (FALSE) { results <- dhis2_subset_fields(   data = readepi(     credentials_file   = system.file(\"extdata\", \"test.ini\",     package = \"readepi\"),     data_source        = \"https://play.dhis2.org/dev\",     dataset            = \"pBOMPrpg1QX,BfMAe6Itzgt\",     organisation_unit  = \"DiszpKrYNg8\",     data_element_group = NULL,     start_date         = \"2014\",     end_date           = \"2023\",     fields             = c(\"dataElement\", \"period\", \"value\")   )$data,   fields               = c(\"dataElement\", \"period\", \"value\") ) }"},{"path":"/reference/dhis2_subset_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset a specified set of records from a dataset imported from DHIS2 — dhis2_subset_records","title":"Subset a specified set of records from a dataset imported from DHIS2 — dhis2_subset_records","text":"Subset specified set records dataset imported DHIS2","code":""},{"path":"/reference/dhis2_subset_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset a specified set of records from a dataset imported from DHIS2 — dhis2_subset_records","text":"","code":"dhis2_subset_records(data, records, id_col_name)"},{"path":"/reference/dhis2_subset_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset a specified set of records from a dataset imported from DHIS2 — dhis2_subset_records","text":"data input data frame records vector records select data id_col_name column name records belong ","code":""},{"path":"/reference/dhis2_subset_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset a specified set of records from a dataset imported from DHIS2 — dhis2_subset_records","text":"object type data.frame data contains records interest","code":""},{"path":"/reference/dhis2_subset_records.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset a specified set of records from a dataset imported from DHIS2 — dhis2_subset_records","text":"","code":"if (FALSE) { result <- dhis2_subset_records(   data = readepi(     credentials_file   = system.file(\"extdata\", \"test.ini\",       package = \"readepi\"     ),     data_source        = \"https://play.dhis2.org/dev\",     dataset            = \"pBOMPrpg1QX\",     organisation_unit  = \"DiszpKrYNg8\",     data_element_group = NULL,     start_date         = \"2014\",     end_date           = \"2023\"   )$data,   records              = c(\"FTRrcoaog83\", \"eY5ehpbEsB7\", \"Ix2HsbDMLea\"),   id_col_name          = \"dataElement\" ) }"},{"path":"/reference/fetch_data_from_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch data from server using an SQL query — fetch_data_from_query","title":"Fetch data from server using an SQL query — fetch_data_from_query","text":"Fetch data server using SQL query","code":""},{"path":"/reference/fetch_data_from_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch data from server using an SQL query — fetch_data_from_query","text":"","code":"fetch_data_from_query(   source,   dbms,   tables,   driver_name,   host,   database_name,   user,   password,   port )"},{"path":"/reference/fetch_data_from_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch data from server using an SQL query — fetch_data_from_query","text":"source SQL query dbms database management system type tables list tables database driver_name driver name host host server name database_name database name user user name password user's password port server port ID","code":""},{"path":"/reference/fetch_data_from_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch data from server using an SQL query — fetch_data_from_query","text":"list 1 objects type data.frame containing data fetched one table.","code":""},{"path":"/reference/fetch_data_from_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch data from server using an SQL query — fetch_data_from_query","text":"","code":"if (FALSE) { result <- fetch_data_from_query(   source        = \"select author_id, name, last_name from author\",   dbms          = \"MySQL\",   tables        = c(\"family_author\", \"author\"),   driver_name   = \"\",   host          = \"mysql-rfam-public.ebi.ac.uk\",   database_name = \"Rfam\",   user          = \"rfamro\",   password      = \"\",   port          = 4497 ) }"},{"path":"/reference/fingertips_subset_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset columns when reading from Fingertips — fingertips_subset_columns","title":"Subset columns when reading from Fingertips — fingertips_subset_columns","text":"Subset columns reading Fingertips","code":""},{"path":"/reference/fingertips_subset_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset columns when reading from Fingertips — fingertips_subset_columns","text":"","code":"fingertips_subset_columns(data, fields)"},{"path":"/reference/fingertips_subset_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset columns when reading from Fingertips — fingertips_subset_columns","text":"data data read Fingertips fields vector comma-separated string column names","code":""},{"path":"/reference/fingertips_subset_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset columns when reading from Fingertips — fingertips_subset_columns","text":"object type data.frame Fingertips dataset contains fields interest","code":""},{"path":"/reference/fingertips_subset_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset columns when reading from Fingertips — fingertips_subset_columns","text":"","code":"if (FALSE) { res <- fingertips_subset_columns(   data = readepi(     profile_id   = 19,     area_type_id = 202   )$data,   fields         = c(\"IndicatorID\", \"AreaCode\", \"Age\", \"Value\") ) }"},{"path":"/reference/fingertips_subset_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset records when reading from Fingertips — fingertips_subset_rows","title":"Subset records when reading from Fingertips — fingertips_subset_rows","text":"Subset records reading Fingertips","code":""},{"path":"/reference/fingertips_subset_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset records when reading from Fingertips — fingertips_subset_rows","text":"","code":"fingertips_subset_rows(data, records, id_col_name)"},{"path":"/reference/fingertips_subset_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset records when reading from Fingertips — fingertips_subset_rows","text":"data data read Fingertips records vector comma-separated string records id_col_name column name subject IDs","code":""},{"path":"/reference/fingertips_subset_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset records when reading from Fingertips — fingertips_subset_rows","text":"object type data.frame Fingertips dataset contains records interest","code":""},{"path":"/reference/fingertips_subset_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset records when reading from Fingertips — fingertips_subset_rows","text":"","code":"if (FALSE) { res <- fingertips_subset_rows(   data = readepi(     profile_id   = 19,     area_type_id = 202   )$data,   records        = c(\"E92000001\", \"E12000002\", \"E12000009\"),   id_col_name    = \"AreaCode\" ) }"},{"path":"/reference/get_attributes_from_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the DHIS2 attributes from the user — get_attributes_from_user","title":"Get the DHIS2 attributes from the user — get_attributes_from_user","text":"Get DHIS2 attributes user","code":""},{"path":"/reference/get_attributes_from_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the DHIS2 attributes from the user — get_attributes_from_user","text":"","code":"get_attributes_from_user(args_list)"},{"path":"/reference/get_attributes_from_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the DHIS2 attributes from the user — get_attributes_from_user","text":"args_list list parameters provided user","code":""},{"path":"/reference/get_attributes_from_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the DHIS2 attributes from the user — get_attributes_from_user","text":"object type list values DHIS2 attributes","code":""},{"path":"/reference/get_dhis2_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the target DHIS2 attribute identifiers and names — get_dhis2_attributes","title":"Get the target DHIS2 attribute identifiers and names — get_dhis2_attributes","text":"Get target DHIS2 attribute identifiers names","code":""},{"path":"/reference/get_dhis2_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the target DHIS2 attribute identifiers and names — get_dhis2_attributes","text":"","code":"get_dhis2_attributes(   base_url = \"https://play.dhis2.org/dev/\",   username = \"admin\",   password = \"district\",   which = \"dataSets\" )"},{"path":"/reference/get_dhis2_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the target DHIS2 attribute identifiers and names — get_dhis2_attributes","text":"base_url base URL DHIS2 server username user name password user's password target DHIS2 attribute name.","code":""},{"path":"/reference/get_dhis2_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the target DHIS2 attribute identifiers and names — get_dhis2_attributes","text":"object type data.frame details DHIS2 attributes interest.","code":""},{"path":"/reference/get_dhis2_attributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the target DHIS2 attribute identifiers and names — get_dhis2_attributes","text":"","code":"if (FALSE) { datasets <- get_dhis2_attributes(   base_url = \"https://play.dhis2.org/dev/\",   username = \"admin\",   password = \"district\",   which = \"dataSets\" ) }"},{"path":"/reference/get_fingertips_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"get fingertips metadata — get_fingertips_metadata","title":"get fingertips metadata — get_fingertips_metadata","text":"get fingertips metadata","code":""},{"path":"/reference/get_fingertips_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get fingertips metadata — get_fingertips_metadata","text":"","code":"get_fingertips_metadata()"},{"path":"/reference/get_fingertips_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get fingertips metadata — get_fingertips_metadata","text":"list 3 objects type data.frame. contain information indicators Fingertips repository.","code":""},{"path":"/reference/get_fingertips_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get fingertips metadata — get_fingertips_metadata","text":"","code":"if (FALSE) {   metadata <- get_fingertips_metadata() }"},{"path":"/reference/get_id_column_name.html","id":null,"dir":"Reference","previous_headings":"","what":"get the id column name — get_id_column_name","title":"get the id column name — get_id_column_name","text":"get id column name","code":""},{"path":"/reference/get_id_column_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the id column name — get_id_column_name","text":"","code":"get_id_column_name(id_col_name, j, id_position)"},{"path":"/reference/get_id_column_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the id column name — get_id_column_name","text":"id_col_name id column name j index id_position id position","code":""},{"path":"/reference/get_id_column_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the id column name — get_id_column_name","text":"list 2 elements type character numeric corresponding ID column name position","code":""},{"path":"/reference/get_ind_id_from_domain_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get indicator ID from domain ID — get_ind_id_from_domain_id","title":"Get indicator ID from domain ID — get_ind_id_from_domain_id","text":"Get indicator ID domain ID","code":""},{"path":"/reference/get_ind_id_from_domain_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get indicator ID from domain ID — get_ind_id_from_domain_id","text":"","code":"get_ind_id_from_domain_id(metadata, domain_id, indicator_name = NULL)"},{"path":"/reference/get_ind_id_from_domain_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get indicator ID from domain ID — get_ind_id_from_domain_id","text":"metadata list fingertips metadata domain_id domain ID indicator_name indicator name","code":""},{"path":"/reference/get_ind_id_from_domain_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get indicator ID from domain ID — get_ind_id_from_domain_id","text":"object type numeric contains indicator ID","code":""},{"path":"/reference/get_ind_id_from_domain_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get indicator ID from domain ID — get_ind_id_from_domain_id","text":"","code":"if (FALSE) { indicator_id <- get_ind_id_from_domain_id(   metadata       = list(     indicator_profile_domain = fingertipsR::indicators(),     indicator_ids_names      = fingertipsR::indicators_unique(),     area_type                = fingertipsR::area_types()   ),   domain_id      = 1000041,   indicator_name = NULL ) }"},{"path":"/reference/get_ind_id_from_domain_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get indicator ID from domain name — get_ind_id_from_domain_name","title":"Get indicator ID from domain name — get_ind_id_from_domain_name","text":"Get indicator ID domain name","code":""},{"path":"/reference/get_ind_id_from_domain_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get indicator ID from domain name — get_ind_id_from_domain_name","text":"","code":"get_ind_id_from_domain_name(metadata, domain_name, indicator_name = NULL)"},{"path":"/reference/get_ind_id_from_domain_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get indicator ID from domain name — get_ind_id_from_domain_name","text":"metadata list fingertips metadata domain_name domain name indicator_name indicator name","code":""},{"path":"/reference/get_ind_id_from_domain_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get indicator ID from domain name — get_ind_id_from_domain_name","text":"object type numeric contains indicator ID","code":""},{"path":"/reference/get_ind_id_from_domain_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get indicator ID from domain name — get_ind_id_from_domain_name","text":"","code":"if (FALSE) { indicator_id <- get_ind_id_from_domain_name(   metadata    = list(     indicator_profile_domain = fingertipsR::indicators(),     indicator_ids_names      = fingertipsR::indicators_unique(),     area_type                = fingertipsR::area_types()   ),   domain_name = \"B. Wider determinants of health\", ) }"},{"path":"/reference/get_ind_id_from_ind_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get indicator ID from indicator name — get_ind_id_from_ind_name","title":"Get indicator ID from indicator name — get_ind_id_from_ind_name","text":"Get indicator ID indicator name","code":""},{"path":"/reference/get_ind_id_from_ind_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get indicator ID from indicator name — get_ind_id_from_ind_name","text":"","code":"get_ind_id_from_ind_name(metadata, indicator_name)"},{"path":"/reference/get_ind_id_from_ind_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get indicator ID from indicator name — get_ind_id_from_ind_name","text":"metadata list fingertips metadata indicator_name indicator name","code":""},{"path":"/reference/get_ind_id_from_ind_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get indicator ID from indicator name — get_ind_id_from_ind_name","text":"object type numeric contains indicator ID","code":""},{"path":"/reference/get_ind_id_from_ind_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get indicator ID from indicator name — get_ind_id_from_ind_name","text":"","code":"if (FALSE) { indicator_id <- get_ind_id_from_ind_name(   metadata       = list(     indicator_profile_domain = fingertipsR::indicators(),     indicator_ids_names      = fingertipsR::indicators_unique(),     area_type                = fingertipsR::area_types()   ),   indicator_name = \"Pupil absence\" ) }"},{"path":"/reference/get_ind_id_from_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Get indicator ID from profile ID and/or profile name — get_ind_id_from_profile","title":"Get indicator ID from profile ID and/or profile name — get_ind_id_from_profile","text":"Get indicator ID profile ID /profile name","code":""},{"path":"/reference/get_ind_id_from_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get indicator ID from profile ID and/or profile name — get_ind_id_from_profile","text":"","code":"get_ind_id_from_profile(   metadata,   domain_id = NULL,   domain_name = NULL,   indicator_name = NULL,   profile_name = NULL,   profile_id = NULL )"},{"path":"/reference/get_ind_id_from_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get indicator ID from profile ID and/or profile name — get_ind_id_from_profile","text":"metadata list fingertips metadata domain_id domain ID domain_name domain name indicator_name indicator name profile_name profile name profile_id profile ID","code":""},{"path":"/reference/get_ind_id_from_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get indicator ID from profile ID and/or profile name — get_ind_id_from_profile","text":"object type numeric contains indicator ID","code":""},{"path":"/reference/get_ind_id_from_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get indicator ID from profile ID and/or profile name — get_ind_id_from_profile","text":"","code":"if (FALSE) { res <- get_ind_id_from_profile(   metadata   = list(     indicator_profile_domain = fingertipsR::indicators(),     indicator_ids_names      = fingertipsR::indicators_unique(),     area_type                = fingertipsR::area_types()   ),   profile_id = 19 ) }"},{"path":"/reference/get_profile_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get profile name from Fingertips — get_profile_name","title":"Get profile name from Fingertips — get_profile_name","text":"Get profile name Fingertips","code":""},{"path":"/reference/get_profile_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get profile name from Fingertips — get_profile_name","text":"","code":"get_profile_name(profile_id, profile_name, metadata)"},{"path":"/reference/get_profile_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get profile name from Fingertips — get_profile_name","text":"profile_id profile ID profile_name profile name metadata Fingertips metadata","code":""},{"path":"/reference/get_profile_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get profile name from Fingertips — get_profile_name","text":"list 2 elements type character numeric. profile name correspondent indexes.","code":""},{"path":"/reference/get_profile_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get profile name from Fingertips — get_profile_name","text":"","code":"if (FALSE) { res <- get_profile_name(   profile_id   = 19,   profile_name = \"Public Health Outcomes Framework\",   metadata = list(     indicator_profile_domain = fingertipsR::indicators(),     indicator_ids_names      = fingertipsR::indicators_unique(),     area_type                = fingertipsR::area_types()   ) ) }"},{"path":"/reference/get_read_fingertips_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Get arguments for reading from Fingertips — get_read_fingertips_args","title":"Get arguments for reading from Fingertips — get_read_fingertips_args","text":"Get arguments reading Fingertips","code":""},{"path":"/reference/get_read_fingertips_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get arguments for reading from Fingertips — get_read_fingertips_args","text":"","code":"get_read_fingertips_args(args_list)"},{"path":"/reference/get_read_fingertips_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get arguments for reading from Fingertips — get_read_fingertips_args","text":"args_list list user specified arguments","code":""},{"path":"/reference/get_read_fingertips_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get arguments for reading from Fingertips — get_read_fingertips_args","text":"list 8 elements type character numeric used importing data Fingertips","code":""},{"path":"/reference/get_read_fingertips_args.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get arguments for reading from Fingertips — get_read_fingertips_args","text":"","code":"if (FALSE) { args_list <- get_read_fingertips_args(   list(     indicator_id = 90362,     area_type_id = 202   ) ) }"},{"path":"/reference/identify_table_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect table names from an SQL query — identify_table_name","title":"Detect table names from an SQL query — identify_table_name","text":"Detect table names SQL query","code":""},{"path":"/reference/identify_table_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect table names from an SQL query — identify_table_name","text":"","code":"identify_table_name(query, tables)"},{"path":"/reference/identify_table_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect table names from an SQL query — identify_table_name","text":"query SQL query tables list tables database","code":""},{"path":"/reference/identify_table_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect table names from an SQL query — identify_table_name","text":"character extracted table name(s) SQL query","code":""},{"path":"/reference/identify_table_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect table names from an SQL query — identify_table_name","text":"","code":"if (FALSE) { table_name <- identify_table_name(   query  = \"select * from author\",   tables = c(\"family_author\", \"author\", \"test\") ) }"},{"path":"/reference/import_redcap_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from REDCap under all scenari — import_redcap_data","title":"Import data from REDCap under all scenari — import_redcap_data","text":"wrapper across use case reading data REDCap .e. around function records fields project, around function read specific records/fields time","code":""},{"path":"/reference/import_redcap_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from REDCap under all scenari — import_redcap_data","text":"","code":"import_redcap_data(records, fields, uri, token, id_position, id_col_name)"},{"path":"/reference/import_redcap_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from REDCap under all scenari — import_redcap_data","text":"records vector comma-separated string subset subject IDs fields vector comma-separated string column names uri URI server token user-specific string serves password project id_position column position variable unique identifies subjects id_col_name column name subject IDs","code":""},{"path":"/reference/import_redcap_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from REDCap under all scenari — import_redcap_data","text":"list 2 elements type data.frame. dataset interest associated metadata.","code":""},{"path":"/reference/import_redcap_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from REDCap under all scenari — import_redcap_data","text":"","code":"if (FALSE) { result <- import_redcap_data(   uri         = \"https://bbmc.ouhsc.edu/redcap/api/\",   token       = \"9A81268476645C4E5F03428B8AC3AA7B\",   records     = c(\"1\", \"3\", \"5\"),   fields      = c(\"record_id\", \"name_first\", \"age\", \"bmi\"),   id_col_name = NULL,   id_position = 1 ) }"},{"path":"/reference/login.html","id":null,"dir":"Reference","previous_headings":"","what":"Check DHIS2 authentication details — login","title":"Check DHIS2 authentication details — login","text":"user granted access API, return message specifying user successfully connected. Otherwise, throw error message.","code":""},{"path":"/reference/login.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check DHIS2 authentication details — login","text":"","code":"login(username, password, base_url)"},{"path":"/reference/login.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check DHIS2 authentication details — login","text":"username user name password user's password base_url base URL DHIS2 server","code":""},{"path":"/reference/make_api_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Make an API request to the target DHIS2 system — make_api_request","title":"Make an API request to the target DHIS2 system — make_api_request","text":"Make API request target DHIS2 system","code":""},{"path":"/reference/make_api_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make an API request to the target DHIS2 system — make_api_request","text":"","code":"make_api_request(base_url, username, password, which = \"dataElements\")"},{"path":"/reference/make_api_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make an API request to the target DHIS2 system — make_api_request","text":"base_url base URL DHIS2 server username user name password user's password target DHIS2 attribute name. Possible values : dataSets: get dataset identifiers names organisationUnits: get organisation unit identifiers names dataElementGroups: get data element groups identifiers names dataElements: get data elements identifiers names","code":""},{"path":"/reference/make_api_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make an API request to the target DHIS2 system — make_api_request","text":"object class data.frame contains information interest.","code":""},{"path":"/reference/read_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Read credentials from a configuration file — read_credentials","title":"Read credentials from a configuration file — read_credentials","text":"Read credentials configuration file","code":""},{"path":"/reference/read_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read credentials from a configuration file — read_credentials","text":"","code":"read_credentials(   file_path = system.file(\"extdata\", \"test.ini\", package = \"readepi\"),   url = \"mysql-rfam-public.ebi.ac.uk\" )"},{"path":"/reference/read_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read credentials from a configuration file — read_credentials","text":"file_path path file user-specific credential details projects interest. url URL interest","code":""},{"path":"/reference/read_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read credentials from a configuration file — read_credentials","text":"list 5 elements type character numeric. correspond user's credential details.","code":""},{"path":"/reference/read_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read credentials from a configuration file — read_credentials","text":"","code":"if (FALSE) { credentials <- read_credentials(   file_path = system.file(\"extdata\", \"test.ini\", package = \"readepi\"),   url       = \"mysql-rfam-public.ebi.ac.uk\" ) }"},{"path":"/reference/read_from_dhis2.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data form DHIS2 into R — read_from_dhis2","title":"Import data form DHIS2 into R — read_from_dhis2","text":"Import data form DHIS2 R","code":""},{"path":"/reference/read_from_dhis2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data form DHIS2 into R — read_from_dhis2","text":"","code":"read_from_dhis2(   base_url,   user_name,   password,   dataset,   organisation_unit,   data_element_group,   start_date,   end_date,   records = NULL,   fields = NULL,   id_col_name = \"dataElement\" )"},{"path":"/reference/read_from_dhis2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data form DHIS2 into R — read_from_dhis2","text":"base_url web address server user wishes log user_name user name password user password dataset vector list comma-separated data set identifiers organisation_unit vector list comma-separated organisation unit identifiers data_element_group vector list comma-separated data element group identifiers start_date start date time span values export end_date end date time span values export records vector comma-separated string subset subject IDs. specified, records correspond subjects imported. fields vector comma-separated string column names. provided, columns imported. id_col_name column name records interest.","code":""},{"path":"/reference/read_from_dhis2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data form DHIS2 into R — read_from_dhis2","text":"list 1 element type data frame.","code":""},{"path":"/reference/read_from_dhis2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data form DHIS2 into R — read_from_dhis2","text":"","code":"if (FALSE) { data <- read_from_dhis2(   base_url           = file.path(\"https:/\", \"play.dhis2.org\", \"dev\"),   user_name          = \"admin\",   password           = \"district\",   dataset            = \"pBOMPrpg1QX\",   organisation_unit  = \"DiszpKrYNg8\",   data_element_group = \"oDkJh5Ddh7d\",   start_date         = \"2014\",   end_date           = \"2023\",   records            = NULL,   fields             = NULL,   id_col_name        = \"dataElement\" ) }"},{"path":"/reference/read_from_fingertips.html","id":null,"dir":"Reference","previous_headings":"","what":"Read from Fingertips — read_from_fingertips","title":"Read from Fingertips — read_from_fingertips","text":"Read Fingertips","code":""},{"path":"/reference/read_from_fingertips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read from Fingertips — read_from_fingertips","text":"","code":"read_from_fingertips(   indicator_id = NULL,   indicator_name = NULL,   area_type_id = NULL,   parent_area_type_id = NULL,   profile_id = NULL,   profile_name = NULL,   domain_id = NULL,   domain_name = NULL,   fields = NULL,   records = NULL,   id_position = NULL,   id_col_name = NULL )"},{"path":"/reference/read_from_fingertips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read from Fingertips — read_from_fingertips","text":"indicator_id numeric vector indicator IDs indicator_name vector comma-separated list indicator names area_type_id vector area type IDs parent_area_type_id vector parent area type IDs profile_id vector profile IDs profile_name vector comma-separated list profile names domain_id vector domain IDs domain_name vector comma-separated list domain names fields vector comma-separated string column names. provided, columns imported. records vector comma-separated string records. specified, records imported. id_position column position variable unique identifies subjects. name column subject IDs known, can provided using id_col_name argument id_col_name column name subject IDs.","code":""},{"path":"/reference/read_from_fingertips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read from Fingertips — read_from_fingertips","text":"list 1 element type data.frame. contains imported dataset interest","code":""},{"path":"/reference/read_from_fingertips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read from Fingertips — read_from_fingertips","text":"","code":"if (FALSE) {   data <- read_from_fingertips(indicator_id = 90362, area_type_id = 202) }"},{"path":"/reference/read_from_redcap.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from REDCap into R — read_from_redcap","title":"Import data from REDCap into R — read_from_redcap","text":"Import data REDCap R","code":""},{"path":"/reference/read_from_redcap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from REDCap into R — read_from_redcap","text":"","code":"read_from_redcap(   uri,   token,   id_position = NULL,   id_col_name = NULL,   records = NULL,   fields = NULL )"},{"path":"/reference/read_from_redcap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from REDCap into R — read_from_redcap","text":"uri URI server token user-specific string serves password project id_position column position variable unique identifies subjects. column name subject IDs known, use id_col_name argument instead. default 1 id_col_name column name subject IDs records vector comma-separated string subset subject IDs. specified, records correspond subjects imported. fields vector comma-separated string column names. provided, columns imported.","code":""},{"path":"/reference/read_from_redcap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from REDCap into R — read_from_redcap","text":"list 2 elements type data.frame. include data frame dataset interest associated metadata.","code":""},{"path":"/reference/read_from_redcap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from REDCap into R — read_from_redcap","text":"","code":"if (FALSE) { redcap_data <- read_from_redcap(   uri         = \"https://bbmc.ouhsc.edu/redcap/api/\",   token       = \"9A81268476645C4E5F03428B8AC3AA7B\",   id_position = 1,   id_col_name = NULL,   records     = NULL,   fields      = NULL ) }"},{"path":"/reference/readepi.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from different data_sources into R — readepi","title":"Import data from different data_sources into R — readepi","text":"function allows import data Health Information Systems (), files, folders.consist database management systems (DBMS) website public data collection.","code":""},{"path":"/reference/readepi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from different data_sources into R — readepi","text":"","code":"readepi(   data_source = NULL,   records = NULL,   fields = NULL,   id_position = NULL,   id_col_name = NULL,   ... )"},{"path":"/reference/readepi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from different data_sources into R — readepi","text":"data_source URL records vector comma-separated string subject IDs. specified, records imported. fields vector comma-separated string column names. provided, columns imported. id_position column position variable unique identifies subjects. name column subject IDs known, can provided using id_col_name argument id_col_name column name subject IDs. ... additional arguments passed readepi() function. enumerated described vignette.","code":""},{"path":"/reference/readepi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from different data_sources into R — readepi","text":"list 1 several object type data frame.","code":""},{"path":"/reference/readepi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import data from different data_sources into R — readepi","text":"","code":"# reading from a MySQL server if (FALSE) { data <- readepi(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = system.file(\"extdata\", \"test.ini\", package = \"readepi\"),   driver_name      = \"\",   from             = \"author\" ) }"},{"path":"/reference/redcap_get_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and return data fetch from redcap — redcap_get_results","title":"Check and return data fetch from redcap — redcap_get_results","text":"Check return data fetch redcap","code":""},{"path":"/reference/redcap_get_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and return data fetch from redcap — redcap_get_results","text":"","code":"redcap_get_results(redcap_data, metadata)"},{"path":"/reference/redcap_get_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and return data fetch from redcap — redcap_get_results","text":"redcap_data object redcap data metadata object redcap metadata","code":""},{"path":"/reference/redcap_get_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and return data fetch from redcap — redcap_get_results","text":"list 2 elements type data.frame. dataset interest associated metadata.","code":""},{"path":"/reference/redcap_get_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and return data fetch from redcap — redcap_get_results","text":"","code":"if (FALSE) { result <- redcap_get_results(   redcap_data = REDCapR::redcap_read(     redcap_uri  = \"https://bbmc.ouhsc.edu/redcap/api/\",     token       = \"9A81268476645C4E5F03428B8AC3AA7B\",     records     = c(\"1\", \"3\", \"5\"),     fields      = c(\"record_id\", \"name_first\", \"age\", \"bmi\"),     verbose     = FALSE,     id_position = 1L   ),   metadata = REDCapR::redcap_metadata_read(     redcap_uri = \"https://bbmc.ouhsc.edu/redcap/api/\",     token      = \"9A81268476645C4E5F03428B8AC3AA7B\",     fields     = NULL,     verbose    = FALSE   ) ) }"},{"path":"/reference/redcap_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all rows and columns from redcap — redcap_read_data","title":"Read all rows and columns from redcap — redcap_read_data","text":"Read rows columns redcap","code":""},{"path":"/reference/redcap_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all rows and columns from redcap — redcap_read_data","text":"","code":"redcap_read_data(uri, token, id_position)"},{"path":"/reference/redcap_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all rows and columns from redcap — redcap_read_data","text":"uri URI REDCap project token user-specific string serves password project id_position column position variable unique identifies subjects","code":""},{"path":"/reference/redcap_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all rows and columns from redcap — redcap_read_data","text":"list 2 elements type data.frame contain project data associated metadata.","code":""},{"path":"/reference/redcap_read_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset fields from a REDCap project — redcap_read_fields","title":"Subset fields from a REDCap project — redcap_read_fields","text":"Subset fields REDCap project","code":""},{"path":"/reference/redcap_read_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset fields from a REDCap project — redcap_read_fields","text":"","code":"redcap_read_fields(fields, uri, token, id_position)"},{"path":"/reference/redcap_read_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset fields from a REDCap project — redcap_read_fields","text":"fields vector comma-separated string column names uri URI REDCap project token user-specific string serves password project id_position column position variable unique identifies subjects","code":""},{"path":"/reference/redcap_read_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset fields from a REDCap project — redcap_read_fields","text":"list 2 elements type data.frame contain project data fields interest associated metadata.","code":""},{"path":"/reference/redcap_read_records.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset records from a REDCap project — redcap_read_records","title":"Subset records from a REDCap project — redcap_read_records","text":"Subset records REDCap project","code":""},{"path":"/reference/redcap_read_records.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset records from a REDCap project — redcap_read_records","text":"","code":"redcap_read_records(records, uri, token, id_position, id_col_name)"},{"path":"/reference/redcap_read_records.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset records from a REDCap project — redcap_read_records","text":"records vector comma-separated string subset subject IDs uri URI REDCap project token user-specific string serves password project id_position column position variable unique identifies subjects id_col_name column name subject IDs","code":""},{"path":"/reference/redcap_read_records.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset records from a REDCap project — redcap_read_records","text":"list 2 elements type data.frame contain project data records interest associated metadata.","code":""},{"path":"/reference/redcap_read_rows_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset records and columns from a REDCap project — redcap_read_rows_columns","title":"Subset records and columns from a REDCap project — redcap_read_rows_columns","text":"Subset records columns REDCap project","code":""},{"path":"/reference/redcap_read_rows_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset records and columns from a REDCap project — redcap_read_rows_columns","text":"","code":"redcap_read_rows_columns(fields, uri, token, id_position, id_col_name, records)"},{"path":"/reference/redcap_read_rows_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset records and columns from a REDCap project — redcap_read_rows_columns","text":"fields vector comma-separated string column names uri URI REDCap project token user-specific string serves password project id_position column position variable unique identifies subjects id_col_name column name subject IDs records vector comma-separated string subset subject IDs","code":""},{"path":"/reference/redcap_read_rows_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset records and columns from a REDCap project — redcap_read_rows_columns","text":"list 2 elements type data.frame contain project data records fields interest associated metadata.","code":""},{"path":"/reference/show_example_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the structure of the credentials file — show_example_file","title":"Display the structure of the credentials file — show_example_file","text":"Display structure credentials file","code":""},{"path":"/reference/show_example_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the structure of the credentials file — show_example_file","text":"","code":"show_example_file()"},{"path":"/reference/show_example_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the structure of the credentials file — show_example_file","text":"","code":"if (FALSE) {   show_example_file() }"},{"path":"/reference/show_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the list of tables in a database — show_tables","title":"Display the list of tables in a database — show_tables","text":"Display list tables database","code":""},{"path":"/reference/show_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the list of tables in a database — show_tables","text":"","code":"show_tables(data_source, credentials_file, driver_name)"},{"path":"/reference/show_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the list of tables in a database — show_tables","text":"data_source URL interest credentials_file path file user-specific credential details projects interest. See help readepi function details. driver_name name MS driver. use odbc::odbcListDrivers() display list installed drivers","code":""},{"path":"/reference/show_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the list of tables in a database — show_tables","text":"character contains list tables found specified database","code":""},{"path":"/reference/show_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the list of tables in a database — show_tables","text":"","code":"if (FALSE) { show_tables(   credentials_file = system.file(\"extdata\", \"test.ini\",                                  package = \"readepi\"),   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   driver_name      = \"\" ) }"},{"path":"/reference/sql_select_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset data read from servers — sql_select_data","title":"Subset data read from servers — sql_select_data","text":"Subset data read servers","code":""},{"path":"/reference/sql_select_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset data read from servers — sql_select_data","text":"","code":"sql_select_data(   table_names,   dbms,   id_col_name,   fields,   records,   id_position,   driver_name,   host,   database_name,   user,   password,   port )"},{"path":"/reference/sql_select_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset data read from servers — sql_select_data","text":"table_names name tables data fetched dbms database management system type id_col_name column names unique identify records tables fields vector strings string comma-separated list column names. records vector comma-separated string subset subject IDs. id_position vector column positions variable unique identifies subjects table driver_name driver name host host server name database_name database name user user name password user's password port server port ID","code":""},{"path":"/reference/sql_select_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset data read from servers — sql_select_data","text":"list 1 elements type data.frame every element contains subset data corresponding table","code":""},{"path":"/reference/sql_select_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset data read from servers — sql_select_data","text":"","code":"if (FALSE) { result <- sql_select_data(   table_names   = \"author\",   dbms          = \"MySQL\",   id_col_name   = \"author_id\",   fields        = c(\"author_id\", \"name\"),   records       = NULL,   id_position   = NULL,   driver_name   = \"\",   host          = \"mysql-rfam-public.ebi.ac.uk\",   database_name = \"Rfam\",   user          = \"rfamro\",   password      = \"\",   port          = 4497 ) }"},{"path":"/reference/sql_select_entire_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch entire dataset in a table — sql_select_entire_dataset","title":"Fetch entire dataset in a table — sql_select_entire_dataset","text":"Fetch entire dataset table","code":""},{"path":"/reference/sql_select_entire_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch entire dataset in a table — sql_select_entire_dataset","text":"","code":"sql_select_entire_dataset(   table,   dbms,   driver_name,   host,   database_name,   user,   password,   port )"},{"path":"/reference/sql_select_entire_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch entire dataset in a table — sql_select_entire_dataset","text":"table table name dbms database management system type driver_name driver name host host server name database_name database name user user name password user's password port server port ID","code":""},{"path":"/reference/sql_select_entire_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch entire dataset in a table — sql_select_entire_dataset","text":"object type data.frame entire dataset fetched specified table","code":""},{"path":"/reference/sql_select_entire_dataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch entire dataset in a table — sql_select_entire_dataset","text":"","code":"if (FALSE) { result <- sql_select_entire_dataset(   table         = \"author\",   dbms          = \"MySQL\",   driver_name   = \"\",   host          = \"mysql-rfam-public.ebi.ac.uk\",   database_name = \"Rfam\",   user          = \"rfamro\",   password      = \"\",   port          = 4497 ) }"},{"path":"/reference/sql_select_fields_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Select specified fields from a table — sql_select_fields_only","title":"Select specified fields from a table — sql_select_fields_only","text":"Select specified fields table","code":""},{"path":"/reference/sql_select_fields_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select specified fields from a table — sql_select_fields_only","text":"","code":"sql_select_fields_only(   table,   field,   dbms,   driver_name,   host,   database_name,   user,   password,   port )"},{"path":"/reference/sql_select_fields_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select specified fields from a table — sql_select_fields_only","text":"table table name field vector column names interest dbms database management system type driver_name driver name host host server name database_name database name user user name password user's password port server port ID","code":""},{"path":"/reference/sql_select_fields_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select specified fields from a table — sql_select_fields_only","text":"object type data.frame contains data fetched specific table fields interest.","code":""},{"path":"/reference/sql_select_fields_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select specified fields from a table — sql_select_fields_only","text":"","code":"if (FALSE) { result <- sql_select_fields_only(   table         = \"author\",   field         = c(\"author_id\", \"name\", \"last_name\"),   dbms          = \"MySQL\",   driver_name   = \"\",   host          = \"mysql-rfam-public.ebi.ac.uk\",   database_name = \"Rfam\",   user          = \"rfamro\",   password      = \"\",   port          = 4497 ) }"},{"path":"/reference/sql_select_records_and_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Select specified records and fields from a table — sql_select_records_and_fields","title":"Select specified records and fields from a table — sql_select_records_and_fields","text":"Select specified records fields table","code":""},{"path":"/reference/sql_select_records_and_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select specified records and fields from a table — sql_select_records_and_fields","text":"","code":"sql_select_records_and_fields(   table,   record,   id_column_name,   field,   id_pos,   dbms,   driver_name,   host,   database_name,   user,   password,   port )"},{"path":"/reference/sql_select_records_and_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select specified records and fields from a table — sql_select_records_and_fields","text":"table table name record vector comma-separated string subset subject IDs. id_column_name column names unique identify records tables field vector strings string comma-separated list column names. id_pos vector column positions variable unique identifies subjects table dbms database management system type driver_name driver name host host server name database_name database name user user name password user's password port server port ID","code":""},{"path":"/reference/sql_select_records_and_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select specified records and fields from a table — sql_select_records_and_fields","text":"object type data.frame contains dataset specified fields records.","code":""},{"path":"/reference/sql_select_records_and_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select specified records and fields from a table — sql_select_records_and_fields","text":"","code":"if (FALSE) { result <- sql_select_records_and_fields(   table          = \"author\",   record         = c(\"1\", \"20\", \"50\"),   id_column_name = \"author_id\",   field          = c(\"author_id\", \"last_name\"),   id_pos         = NULL,   dbms           = \"MySQL\",   driver_name    = \"\",   host           = \"mysql-rfam-public.ebi.ac.uk\",   database_name  = \"Rfam\",   user           = \"rfamro\",   password       = \"\",   port           = 4497 ) }"},{"path":"/reference/sql_select_records_only.html","id":null,"dir":"Reference","previous_headings":"","what":"Select specified records from a table — sql_select_records_only","title":"Select specified records from a table — sql_select_records_only","text":"Select specified records table","code":""},{"path":"/reference/sql_select_records_only.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select specified records from a table — sql_select_records_only","text":"","code":"sql_select_records_only(   table,   record,   id_column_name,   id_pos,   dbms,   driver_name,   host,   database_name,   user,   password,   port )"},{"path":"/reference/sql_select_records_only.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select specified records from a table — sql_select_records_only","text":"table table name record vector comma-separated string subset subject IDs. id_column_name column names unique identify records tables id_pos vector column positions variable unique identifies subjects table dbms database management system type driver_name driver name host host server name database_name database name user user name password user's password port server port ID","code":""},{"path":"/reference/sql_select_records_only.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select specified records from a table — sql_select_records_only","text":"object type data.frame contains data fetched specific table records interest.","code":""},{"path":"/reference/sql_select_records_only.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select specified records from a table — sql_select_records_only","text":"","code":"if (FALSE) { result <- sql_select_records_only(   table          = \"author\",   record         = c(\"1\", \"20\", \"50\"),   id_column_name = NULL,   id_pos         = 1,   dbms           = \"MySQL\",   driver_name    = \"\",   host           = \"mysql-rfam-public.ebi.ac.uk\",   database_name  = \"Rfam\",   user           = \"rfamro\",   password       = \"\",   port           = 4497 ) }"},{"path":"/reference/sql_server_read_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from database management systems (DBMS). — sql_server_read_data","title":"Read data from database management systems (DBMS). — sql_server_read_data","text":"function assumes user read access database. Importing data stored DBMS R requires installation appropriate driver compatible server version hosting database. See vignette install driver","code":""},{"path":"/reference/sql_server_read_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from database management systems (DBMS). — sql_server_read_data","text":"","code":"sql_server_read_data(   user = \"rfamro\",   password = \"\",   host = \"mysql-rfam-public.ebi.ac.uk\",   port = 1433L,   database_name = \"Rfam\",   driver_name = \"\",   source = NULL,   records = NULL,   fields = NULL,   id_position = NULL,   id_col_name = NULL,   dbms = \"MySQL\" )"},{"path":"/reference/sql_server_read_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from database management systems (DBMS). — sql_server_read_data","text":"user user name password user password host name host server port port ID database_name name database contains table data pulled driver_name name MS driver. use odbc::odbcListDrivers() display list installed drivers source SQL query vector table names project database. specified, function extract data tables database. records vector comma-separated string subset subject IDs. specified, records correspond subjects imported. fields vector strings string comma-separated list column names. element vector list column names first table specified table_names argument ... id_position vector column positions variable unique identifies subjects table. column name subject IDs known, use id_col_name argument instead. default 1. id_col_name column name subject IDs dbms SQL server type","code":""},{"path":"/reference/sql_server_read_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from database management systems (DBMS). — sql_server_read_data","text":"list 1 several objects type data.frame. number elements list depends number tables data fetched.","code":""},{"path":"/reference/sql_server_read_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data from database management systems (DBMS). — sql_server_read_data","text":"","code":"if (FALSE) { data <- sql_server_read_data(   user          = \"rfamro\",   password      = \"\",   host          = \"mysql-rfam-public.ebi.ac.uk\",   port          = 4497,   database_name = \"Rfam\",   source        = \"author\",   driver_name   = \"\",   dbms          = \"MySQL\" ) }"},{"path":"/reference/visualise_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the first 5 rows of the data from a table — visualise_table","title":"Visualize the first 5 rows of the data from a table — visualise_table","text":"Visualize first 5 rows data table","code":""},{"path":"/reference/visualise_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the first 5 rows of the data from a table — visualise_table","text":"","code":"visualise_table(data_source, credentials_file, from, driver_name)"},{"path":"/reference/visualise_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the first 5 rows of the data from a table — visualise_table","text":"data_source URL credentials_file path file user-specific credential details projects interest table name driver_name name MS driver","code":""},{"path":"/reference/visualise_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the first 5 rows of the data from a table — visualise_table","text":"prints first 5 rows specified table","code":""},{"path":"/reference/visualise_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize the first 5 rows of the data from a table — visualise_table","text":"","code":"if (FALSE) { visualise_table(   data_source      = \"mysql-rfam-public.ebi.ac.uk\",   credentials_file = system.file(\"extdata\", \"test.ini\", package = \"readepi\"),   from             = \"author\",   driver_name      = \"\" ) }"}]
